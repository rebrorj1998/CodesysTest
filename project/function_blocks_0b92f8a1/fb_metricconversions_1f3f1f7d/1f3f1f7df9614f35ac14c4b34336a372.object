{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)1f3f1f7d-f961-4f35-ac14-c4b34336a372","ParentGuid":"(Guid)00000000-0000-0000-0000-000000000000","Name":"(string)FB_MetricConversions","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)829a18f2-c514-4f6e-9634-1df173429203","@Value":{"@Type":"829a18f2","@Value":{"ParentObjects":{"@Type":"fa2ee218:IDictionary","@Value":[{"@Key":"(Guid)21af5390-2942-461a-bf89-951aaf6999f1","@Value":"(Guid)0b92f8a1-c388-4096-9e11-77ece4e424ef"}]}}}}]},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","829a18f2":"{829a18f2-c514-4f6e-9634-1df173429203}","fa2ee218":"{fa2ee218-a39b-4b6d-b249-49dbddbd168a}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)//    Function Block: FB_ModbusDWORD\n//    Description: Automatically converts inches to mm every time an inch value changes.\n//    \n//    Created by: Steve Olson\n//    Created Date: Friday, January 3, 2025\n\n_ConvertInchToMetric(CLK := HMIData.HMIMetric);\n_ConvertMetricToInch(CLK := HMIData.HMIMetric);\n\nIF HMIData.HMIMetric THEN\n    bagLengthOut := bagLengthIn / 25.4;\n    bagWidthOut := bagWidthIn / 25.4;\n    bagSkirtLengthOut := bagSkirtLengthIn / 25.4;\n    printSpeedOut := LREAL_TO_UDINT(printSpeedIn / 25.4);\n    printOffsetOut := printOffsetIn / 25.4;\n    printLengthOut := printLengthIn / 25.4;\n    passthroughSettingOut := passthroughSettingIn / 25.4;\n    jawClosePositionSettingOut := jawClosePositionSettingIn / 25.4;\n    barcodeStartPositionOut := barcodeStartPositionIn / 25.4;\n    sealBarTempOut := (sealBarTempIn - 32) * 5 / 9; // Fahrenheit to Celsius\n    feedSpeedOut := (feedSpeedIn / 25.4);\n    reverseSpeedOut := (reverseSpeedIn / 25.4);\nELSE\n    bagLengthOut := bagLengthIn;\n    bagWidthOut := bagWidthIn;\n    bagSkirtLengthOut := bagSkirtLengthIn;\n    printSpeedOut := printSpeedIn;\n    printOffsetOut := printOffsetIn;\n    printLengthOut := printLengthIn;\n    passthroughSettingOut := passthroughSettingIn;\n    jawClosePositionSettingOut := jawClosePositionSettingIn;\n    barcodeStartPositionOut := barcodeStartPositionIn;\n    sealBarTempOut := sealBarTempIn;\n    feedSpeedOut := feedSpeedIn;\n    reverseSpeedOut := reverseSpeedIn;\nEND_IF\n\nHMIData.HMIMetric; // testing visibility\n\nIF _ConvertInchToMetric.Q THEN\n    HMIData.bagLength := bagLengthIn * 25.4;\n    HMIData.bagSkirtLength := bagSkirtLengthIn * 25.4;\n    HMIData.printOffset := printOffsetIn * 25.4;\n    HMIData.printLength := printLengthIn * 25.4;\n    HMIData.passthroughSetting := passthroughSettingIn * 25.4;\n    HMIData.jawClosePositionSetting := jawClosePositionSettingIn * 25.4;\n    HMIData.barcodeStartPosition := barcodeStartPositionIn * 25.4;\n\tHMIData.printSpeed := REAL_TO_UINT(printSpeedIn * 25.4);\n    //sealBarTempOut := (sealBarTempIn - 32) * 5 / 9; // Fahrenheit to Celsius\n    HMIData.bagForwardSpeed := REAL_TO_UDINT(feedSpeedIn * 25.4);\n    HMIData.bagReverseSpeed := REAL_TO_UDINT(reverseSpeedIn * 25.4);\nEND_IF\n\nIF _ConvertMetricToInch.Q THEN\n    HMIData.bagLength := bagLengthIn / 25.4;\n    HMIData.bagSkirtLength := bagSkirtLengthIn / 25.4;\n    HMIData.printOffset := printOffsetIn / 25.4;\n    HMIData.printLength := printLengthIn / 25.4;\n    HMIData.passthroughSetting := passthroughSettingIn / 25.4;\n    HMIData.jawClosePositionSetting := jawClosePositionSettingIn / 25.4;\n    HMIData.barcodeStartPosition := barcodeStartPositionIn / 25.4;\n\tHMIData.printSpeed := REAL_TO_UINT(printSpeedIn / 25.4);\n    sealBarTempOut := (sealBarTempIn * 9 / 5) + 32; // Celsius to Fahrenheit\n    HMIData.bagForwardSpeed := REAL_TO_UDINT(feedSpeedIn / 25.4);\n    HMIData.bagReverseSpeed := REAL_TO_UDINT(reverseSpeedIn / 25.4);\nEND_IF\n","LineInfoPersistence":"(string)1f3f1f7d-f961-4f35-ac14-c4b34336a372_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)FUNCTION_BLOCK e\nVAR_INPUT\n    bagLengthIn : REAL;\n    bagWidthIn : REAL;\n    bagSkirtLengthIn : REAL;\n    sealBarTempIn : REAL;\n    printSpeedIn : UDINT;\n    printOffsetIn : REAL;\n    printLengthIn : REAL;\n    passthroughSettingIn : REAL;\n    jawClosePositionSettingIn : REAL;\n    barcodeStartPositionIn : REAL;\n    barcodeScanningDistanceIn : REAL;\n\tfeedSpeedIn : REAL;\n    reverseSpeedIn : REAL;\nEND_VAR\nVAR_OUTPUT\n    bagLengthOut : REAL;\n    bagWidthOut : REAL;\n    bagSkirtLengthOut : REAL;\n    sealBarTempOut : REAL;\n    printSpeedOut : UDINT;\n    printOffsetOut : REAL;\n    printLengthOut : REAL;\n    passthroughSettingOut : REAL;\n    jawClosePositionSettingOut : REAL;\n    barcodeStartPositionOut : REAL;\n    barcodeScanningDistanceOut : REAL;\n   \tfeedSpeedOut : REAL;\n    reverseSpeedOut : REAL;\nEND_VAR\nVAR \n    _ConvertMetricToInch: F_TRIG;\n    _ConvertInchToMetric: R_TRIG;\nEND_VAR","LineInfoPersistence":"(string)1f3f1f7d-f961-4f35-ac14-c4b34336a372_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)339","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}