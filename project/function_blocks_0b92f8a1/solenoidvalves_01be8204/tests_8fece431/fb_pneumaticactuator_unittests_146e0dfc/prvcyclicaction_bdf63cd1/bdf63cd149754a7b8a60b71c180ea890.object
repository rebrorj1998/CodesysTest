{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)bdf63cd1-4975-4a7b-8a60-b71c180ea890","ParentGuid":"(Guid)146e0dfc-1bdb-45e7-b4ec-1d734092691c","Name":"(string)prvCyclicAction","Properties":{"@Type":"2c41fa04:IDictionary","@Value":{}},"TypeGuid":"(Guid)f8a58466-d7f6-439f-bbb8-d4600e41d099","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"f8a58466","@Value":{"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)SUPER^.prvCyclicAction();\nTHIS^.diTestCaseCount := 3;\n\nCASE diTestCaseIndex OF\n    0: // Test Case #0\n        IF THIS^.xGetTestInfo THEN\n            THIS^.sTestCaseName := 'Step 1: Test Initialzed No State';\n            THIS^.sTestCaseCategories := 'Solenoids';\n            THIS^.diTestCaseTimeout := 3000;\n\t\t\txDone := TRUE;\n\t\tELSE\n\t\t\tIF NOT testee.ExtendAsserted \n\t\t\t\tAND NOT testee.RetractAsserted \n\t\t\t\tAND NOT testee.IsExtended\n\t\t\t\tAND NOT testee.IsRetracted\n\t\t\t\tTHEN\n\t\t\t\t xDone := TRUE;\n\t\t\tELSE\n\t\t\t\tTHIS^.sError := 'Initialzed with state (Extended or Retracted)';\n\t\t\t\txError := TRUE;\n\t\t\t\teError := UnitTestErrors.Failure;\n            \teFailureMode := TM.FAILUREMODE.AbortTestCase;\n                iError := 1;\n\t\t\tEND_IF\n        END_IF\n    1: // Test Case #1\n        IF THIS^.xGetTestInfo THEN\n            THIS^.sTestCaseName := 'Step 2: Extend Cylinder';\n            THIS^.sTestCaseCategories := 'Solenoids';\n            THIS^.diTestCaseTimeout := 3000;\n            xDone := TRUE;\n\t\tELSE\n\t\t\ttestee.Extend();\n\t\t\ttestee.IsExtended := TRUE;\n\t\t\tIF testee.ExtendAsserted\n\t\t\t\tAND testee.IsExtended\n\t\t\t\tAND NOT testee.RetractAsserted\n\t\t\t\tAND NOT testee.IsRetracted \n\t\t\t\tTHEN\n\t\t\t\t xDone := TRUE;\n\t\t\tELSE \n\t\t\t\tTHIS^.sError := 'Failed to extend';\n\t\t\t\txError := TRUE;\n\t\t\t\teError := UnitTestErrors.Failure;\n            \teFailureMode := TM.FAILUREMODE.AbortTestCase;\n                iError := 2;\n\t\t\tEND_IF\n       END_IF\n\t   \n\t2:\t//\n\t\tIF THIS^.xGetTestInfo THEN\n            THIS^.sTestCaseName := 'Step 3: Retract Cylinder';\n            THIS^.sTestCaseCategories := 'Solenoids';\n            THIS^.diTestCaseTimeout := 3000;\n            xDone := TRUE;\n\t\tELSE\n\t\t\ttestee.Retract();\n\t\t\ttestee.IsRetracted := TRUE;\n\t\t\ttestee.IsExtended := FALSE;\n\t\t\tIF NOT testee.ExtendAsserted\n\t\t\t\tAND NOT testee.IsExtended\n\t\t\t\tAND testee.RetractAsserted\n\t\t\t\tAND testee.IsRetracted \n\t\t\t\tTHEN\n\t\t\t\t xDone := TRUE;\n\t\t\tELSE \n\t\t\t\tTHIS^.sError := 'Failed to retract';\n\t\t\t\txError := TRUE;\n\t\t\t\teError := UnitTestErrors.Failure;\n            \teFailureMode := TM.FAILUREMODE.AbortTestCase;\n                iError := 3;\n\t\t\tEND_IF\n       END_IF\n    ELSE\n        IF THIS^.diTestCaseIndex < 0 THEN\n            THIS^.diTestCaseCount := 3;\n            xDone := TRUE;\n        ELSE\n            THIS^.sInfo := 'Invalid test case index';\n            eError := UnitTestErrors.Failure;\n\t\t\txError := TRUE;\n        END_IF\nEND_CASE\n","LineInfoPersistence":"(string)bdf63cd1-4975-4a7b-8a60-b71c180ea890_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string){attribute 'hide'}\nMETHOD prvCyclicAction : BOOL\n","LineInfoPersistence":"(string)bdf63cd1-4975-4a7b-8a60-b71c180ea890_Decl_LineIds"}}}}}},"TypeInfos":{"3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","f8a58466":"{f8a58466-d7f6-439f-bbb8-d4600e41d099}","string":"System.String"}}},"FormatVersion":"1.0"}