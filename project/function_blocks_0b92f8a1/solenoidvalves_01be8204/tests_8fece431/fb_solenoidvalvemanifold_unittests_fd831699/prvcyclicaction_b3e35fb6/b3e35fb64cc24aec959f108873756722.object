{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)b3e35fb6-4cc2-4aec-959f-108873756722","ParentGuid":"(Guid)fd831699-07ec-4bb6-9ea8-db70ceacf0fc","Name":"(string)prvCyclicAction","Properties":{"@Type":"2c41fa04:IDictionary","@Value":{}},"TypeGuid":"(Guid)f8a58466-d7f6-439f-bbb8-d4600e41d099","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"f8a58466","@Value":{"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)SUPER^.prvCyclicAction();\nTHIS^.diTestCaseCount := 6;\n\nCASE diTestCaseIndex OF\n    0: // Test Case #0\n        IF THIS^.xGetTestInfo THEN\n            THIS^.sTestCaseName := 'Step 1: Test All Solonoids Off';\n            THIS^.sTestCaseCategories := 'Solenoids';\n            THIS^.diTestCaseTimeout := 3000;\n\t\t\txDone := TRUE;\n\t\tELSE\n\t\t\tIF testDWORD = 0 THEN\n\t\t\t\t xDone := TRUE;\n\t\t\tELSE\n\t\t\t\tTHIS^.sError := 'Solenoids not initalized off';\n\t\t\t\txError := TRUE;\n\t\t\t\teError := UnitTestErrors.Failure;\n            \teFailureMode := TM.FAILUREMODE.AbortTestCase;\n                iError := 1;\n\t\t\tEND_IF\n        END_IF\n    1: // Test Case #1\n        IF THIS^.xGetTestInfo THEN\n            THIS^.sTestCaseName := 'Step 2: Extend Cylinder in Station 0';\n            THIS^.sTestCaseCategories := 'Solenoids';\n            THIS^.diTestCaseTimeout := 3000;\n            xDone := TRUE;\n\t\tELSE\n\t\t\tvalves[1].Extend();\n\t\t\ttestee();\n\t\t\t\n\t\t\tIF testDWORD = 1 THEN\n\t\t\t\t xDone := TRUE;\n\t\t\tELSE \n\t\t\t\tTHIS^.sError := Standard.CONCAT('Incorrect bit set; value should be 1 was: ', TO_STRING(testDWORD));\n\t\t\t\txError := TRUE;\n\t\t\t\teError := UnitTestErrors.Failure;\n            \teFailureMode := TM.FAILUREMODE.AbortTestCase;\n                iError := 2;\n\t\t\tEND_IF\n       END_IF\n\t   \n\t2:\t//\n\t\tIF THIS^.xGetTestInfo THEN\n            THIS^.sTestCaseName := 'Step 3: Retract Cylinder in Station 0';\n            THIS^.sTestCaseCategories := 'Solenoids';\n            THIS^.diTestCaseTimeout := 3000;\n            xDone := TRUE;\n\t\tELSE\n\t\t\tvalves[1].Retract();\n\t\t\ttestee();\n\t\t\tIF testDWORD = 2 THEN\n\t\t\t\t xDone := TRUE;\n\t\t\tELSE \n\t\t\t\tTHIS^.sError := Standard.CONCAT('Incorrect bit set; value should be 2 was: ', TO_STRING(testDWORD));\n\t\t\t\txError := TRUE;\n\t\t\t\teError := UnitTestErrors.Failure;\n            \teFailureMode := TM.FAILUREMODE.AbortTestCase;\n                iError := 3;\n\t\t\tEND_IF\n       END_IF\n\n   \t3:\tIF THIS^.xGetTestInfo THEN\n            THIS^.sTestCaseName := 'Step 4: Extend Low Pressure Cylinder in Station 0';\n            THIS^.sTestCaseCategories := 'Solenoids';\n            THIS^.diTestCaseTimeout := 3000;\n            xDone := TRUE;\n\t\tELSE\n\t\t\tvalves[1].ExtendLowPressure();\n\t\t\ttestee();\n\t\t\tIF testDWORD = 3 THEN\n\t\t\t\t xDone := TRUE;\n\t\t\tELSE \n\t\t\t\tTHIS^.sError := Standard.CONCAT('Incorrect bit set; value should be 2 was: ', TO_STRING(testDWORD));\n\t\t\t\txError := TRUE;\n\t\t\t\teError := UnitTestErrors.Failure;\n            \teFailureMode := TM.FAILUREMODE.AbortTestCase;\n                iError := 3;\n\t\t\tEND_IF\n       END_IF\n\t   \n\t4: // Test Case #4\n        IF THIS^.xGetTestInfo THEN\n            THIS^.sTestCaseName := 'Step 5: Test Copy of Valve to 2nd position';\n            THIS^.sTestCaseCategories := 'Solenoids';\n            THIS^.diTestCaseTimeout := 3000;\n\t\t\txDone := TRUE;\n\t\tELSE\n\t\t\ttestee.station[2] := valves[1];\n\t\t\ttestee();\n\t\t\tIF testDWORD = 15 THEN\n\t\t\t\t xDone := TRUE;\n\t\t\tELSE\n\t\t\t\tTHIS^.sError := Standard.CONCAT('Incorrect bits set; value should be 15 was: ', TO_STRING(testDWORD));\n\t\t\t\txError := TRUE;\n\t\t\t\teError := UnitTestErrors.Failure;\n            \teFailureMode := TM.FAILUREMODE.AbortTestCase;\n                iError := 1;\n\t\t\tEND_IF\n        END_IF\n\t\t\n\t\t5: // Test Case #5\n        IF THIS^.xGetTestInfo THEN\n            THIS^.sTestCaseName := 'Step 6: Exhaust Valves';\n            THIS^.sTestCaseCategories := 'Solenoids';\n            THIS^.diTestCaseTimeout := 3000;\n\t\t\txDone := TRUE;\n\t\tELSE\n\t\t\tvalves[1].Exhaust();\n\t\t\ttestee();\n\t\t\tIF testDWORD = 0 THEN\n\t\t\t\t xDone := TRUE;\n\t\t\tELSE\n\t\t\t\tTHIS^.sError := Standard.CONCAT('Incorrect bits set; value should be 0 was: ', TO_STRING(testDWORD));\n\t\t\t\txError := TRUE;\n\t\t\t\teError := UnitTestErrors.Failure;\n            \teFailureMode := TM.FAILUREMODE.AbortTestCase;\n                iError := 1;\n\t\t\tEND_IF\n        END_IF\n\t\t\n    ELSE\n        IF THIS^.diTestCaseIndex < 0 THEN\n            THIS^.diTestCaseCount := 6;\n            xDone := TRUE;\n        ELSE\n            THIS^.sInfo := 'Invalid test case index';\n            eError := UnitTestErrors.Failure;\n\t\t\txError := TRUE;\n        END_IF\nEND_CASE\n","LineInfoPersistence":"(string)b3e35fb6-4cc2-4aec-959f-108873756722_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string){attribute 'hide'}\nMETHOD prvCyclicAction : BOOL\n","LineInfoPersistence":"(string)b3e35fb6-4cc2-4aec-959f-108873756722_Decl_LineIds"}}}}}},"TypeInfos":{"3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","f8a58466":"{f8a58466-d7f6-439f-bbb8-d4600e41d099}","string":"System.String"}}},"FormatVersion":"1.0"}