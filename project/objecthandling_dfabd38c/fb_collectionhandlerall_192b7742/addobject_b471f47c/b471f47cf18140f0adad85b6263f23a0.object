{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)b471f47c-f181-40f0-adad-85b6263f23a0","ParentGuid":"(Guid)192b7742-5d93-444e-8d52-98725949499f","Name":"(string)AddObject","Properties":{"@Type":"2c41fa04:IDictionary","@Value":{}},"TypeGuid":"(Guid)f8a58466-d7f6-439f-bbb8-d4600e41d099","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"f8a58466","@Value":{"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)IF (__QUERYINTERFACE(Obj, AnyObject)) THEN\n   // make sure haven't already added this object\n   FOR J:= 1 TO _TotalObj DO\n      IF Collection[J] = AnyObject THEN\n         // object pointer matches - dupe!\n         _DupeObj:= _DupeObj + 1;\n         RETURN;\n      END_IF\n   END_FOR\n   \n   IF _TotalObj < GlobalObjects.MAX_OBJECTS THEN\n      Collection[_TotalObj]:= AnyObject;\n      ObjNames[_TotalObj]:= Obj.InstanceName;\n\t   _TotalObj:= _TotalObj + 1;\n   ELSE\n      _ArrayOver:= TRUE;\n      _OverObj:= _OverObj + 1;\n   END_IF\nELSE\n   _BadObj:= _BadObj + 1;\nEND_IF\n\n// Add object to proper collection based on its interfaces\nIF (__QUERYINTERFACE(Obj, Fault)) THEN\n\tGlobalObjects.CollectionOfFaults.AddObject(Fault);\nEND_IF\n\n// IF (__QUERYINTERFACE(Obj, Cylinder)) THEN\n// \tGlobalObjects.CollectionOfCylinders.AddObject(Cylinder);\n// END_IF\n// \n// IF (__QUERYINTERFACE(Obj, PositionableMotor)) THEN\n// \tGlobalObjects.CollectionOfPositionableMotors.AddObject(PositionableMotor);\n// END_IF\n\nIF (__QUERYINTERFACE(Obj, Logger)) THEN\n\tGlobalObjects.CollectionOfLogs.AddObject(Logger);\nEND_IF\n\nIF (__QUERYINTERFACE(Obj, Loggable)) THEN\n\tGlobalObjects.CollectionOfLoggable.AddObject(Loggable);\nEND_IF\n\nIF (__QUERYINTERFACE(Obj, Executable)) THEN\n\tGlobalObjects.CollectionOfExecutable.AddObject(Executable);\nEND_IF\n\nIF (__QUERYINTERFACE(Obj, Initializable)) THEN\n\tGlobalObjects.CollectionOfInitialzable.AddObject(Initializable);\nEND_IF","LineInfoPersistence":"(string)b471f47c-f181-40f0-adad-85b6263f23a0_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)METHOD FINAL AddObject\nVAR_INPUT\n\tObj   : IAllObjects;\nEND_VAR\nVAR\n\tAnyObject : IAllObjects;\n\tFault : IFault;\n\tCylinder : ICylinder;\n\tPositionableMotor : IPositionableMotor;\n\tLogger : IMachineLogger;\n\tLoggable : ILoggable;\n\tExecutable : IExecuteAutomatically;\n\tInitializable : IInitializable;\n\tJ   : UINT;\nEND_VAR","LineInfoPersistence":"(string)b471f47c-f181-40f0-adad-85b6263f23a0_Decl_LineIds"}}}}}},"TypeInfos":{"3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","f8a58466":"{f8a58466-d7f6-439f-bbb8-d4600e41d099}","string":"System.String"}}},"FormatVersion":"1.0"}