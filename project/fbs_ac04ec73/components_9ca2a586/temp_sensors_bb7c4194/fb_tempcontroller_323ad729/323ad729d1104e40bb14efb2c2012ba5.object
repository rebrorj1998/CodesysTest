{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)323ad729-d110-4e40-bb14-efb2c2012ba5","ParentGuid":"(Guid)00000000-0000-0000-0000-000000000000","Name":"(string)FB_TempController","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)829a18f2-c514-4f6e-9634-1df173429203","@Value":{"@Type":"829a18f2","@Value":{"ParentObjects":{"@Type":"fa2ee218:IDictionary","@Value":[{"@Key":"(Guid)21af5390-2942-461a-bf89-951aaf6999f1","@Value":"(Guid)bb7c4194-023d-4e9f-82fd-438865c814c9"}]}}}}]},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","829a18f2":"{829a18f2-c514-4f6e-9634-1df173429203}","fa2ee218":"{fa2ee218-a39b-4b6d-b249-49dbddbd168a}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)SUPER^();\nIF enableONS.Q THEN\n\tlastTemp := _currentTemp;\nEND_IF\nupdateTimer(IN := NOT updateTimer.Q);\nthermRunawayNHUpdateTimer();\nthermRunawayNHFaultTimer();\nthermRunawayOSUpdateTimer();\nthermRunawayOSFaultTimer();\n\nIF updateTimer.Q THEN\n\tPI(\n\t\tACT:= temperatureSensor.TempReadingF, \n\t\tSET:= temperatureSetpoint, \n\t\tSUP:= _deadBand, \n\t\tOFS:= , \n\t\tM_I:= _manualOutput, \n\t\tMAN:= _manualMode, \n\t\tRST:= , \n\t\tKP:= _kp, \n\t\tKI:= _ki, \n\t\tLL:= _ll, \n\t\tLH:= _lh, \n\t\tY=> , \n\t\tDIFF=> , \n\t\tLIM=> );\n\nEND_IF\ncooling := (enable AND temperatureSensor.TempReadingF > temperatureSetpoint) OR NOT enable;\nheating := enable AND temperatureSensor.TempReadingF < temperatureSetpoint;\ndiffScaled := TO_DINT((PI.DIFF * 1000));\n\ndiffScaled := TO_DINT((PI.DIFF * 1000));\n_currentTemp := temperatureSensor.TempReadingF;\ntempScaled := TO_DINT((temperatureSensor.TempReadingF * 1000));\n\nPWM(\n\tCI:= PI.Y / 1000, \n\tMAN_IN:= , \n\tMANUAL:= , \n\tF:= _pwmHz , \n\tQ=> heaterPulse);\n\t\nIF NOT enable \n\tOR REAL_TO_INT(temperatureSensor.TempReadingC) = 0 \n\tOR thermalRunawayNotHeating.active\n\tOR thermalRunawayOvershoot.active\n\tTHEN\n\t_manualMode := TRUE;\n\t_manualOutput := 0.0;\nELSE\n\t_manualMode := FALSE;\nEND_IF\n\n// Thermal Runaway - not heating\nIF (NOT tempOK AND heating) AND NOT thermalRunawayNotHeating.active THEN\n\tthermRunawayNHUpdateTimer.IN := TRUE;\n\tIF thermRunawayNHUpdateTimer.Q THEN\n\t\tIF TO_DINT(_currentTemp) > TO_DINT(lastTemp) THEN\n\t\t\tthermRunawayNHFaultTimer.IN := FALSE;\n\t\tELSE\n\t\t\tthermRunawayNHFaultTimer.IN := TRUE;\n\t\tEND_IF\n\t\tlastTemp := _currentTemp; \n\t\tthermRunawayNHUpdateTimer.IN := FALSE;\n\tEND_IF\t\nELSE\n\tthermRunawayNHUpdateTimer.IN := FALSE;\nEND_IF\n\nIF thermRunawayNHFaultTimer.Q THEN\n\tthermalRunawayNotHeating.Trigger();\n\tthermRunawayNHFaultTimer.IN := FALSE;\nEND_IF\n\n// Thermal Runaway - overshoot\nIF (NOT tempOK AND cooling) AND NOT thermalRunawayOvershoot.active THEN\n\tthermRunawayOSUpdateTimer.IN := TRUE;\n\tIF thermRunawayOSUpdateTimer.Q THEN\n\t\tIF TO_DINT(_currentTemp) < TO_DINT(lastTemp) THEN\n\t\t\tthermRunawayOSFaultTimer.IN := FALSE;\n\t\tELSE\n\t\t\tthermRunawayOSFaultTimer.IN := TRUE;\n\t\tEND_IF\n\t\tlastTemp := _currentTemp; \n\t\tthermRunawayOSUpdateTimer.IN := FALSE;\n\tEND_IF\t\nELSE\n\tthermRunawayOSUpdateTimer.IN := FALSE;\nEND_IF\n\nIF thermRunawayOSFaultTimer.Q THEN\n\tthermalRunawayOvershoot.Trigger();\n\tthermRunawayOSFaultTimer.IN := FALSE;\nEND_IF\n\nIF (_currentTemp < (temperatureSetpoint - 10) OR _currentTemp > (temperatureSetpoint + 10)) AND NOT HMIData.enableDryCycle THEN\n\tHMIData.sealBarNotAtTemperature.active := TRUE;\n\ttempOK := FALSE;\nELSE\n\tHMIData.sealBarNotAtTemperature.active := FALSE;\n\ttempOK := TRUE;\n\tlastTemp := _currentTemp;\nEND_IF\n\nIF HMIData.faultActive THEN\n\tthermRunawayNHUpdateTimer.IN := FALSE;\n\tthermRunawayNHFaultTimer.IN := FALSE;\n\tthermRunawayOSUpdateTimer.IN := FALSE;\n\tthermRunawayOSFaultTimer.IN := FALSE;\nEND_IF\n\ncurrentTemp := TO_UDINT(_currentTemp);","LineInfoPersistence":"(string)323ad729-d110-4e40-bb14-efb2c2012ba5_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)FUNCTION_BLOCK FB_TempController EXTENDS FB_BaseComponent\nVAR_INPUT\n\ttemperatureSensor : ITempSensor;\n\ttemperatureSetpoint : REAL;\nEND_VAR\nVAR_OUTPUT\n\theaterPulse : BOOL;\n\tcurrentTemp : UDINT;\n\tthermalRunawayOvershoot : FB_Fault(name := 'Thermal Runaway - Overshoot');\n\tthermalRunawayNotHeating : FB_Fault(name := 'Thermal Runaway - Not Heating');\n\ttempOK : BOOL; // At desired temperature\n\tcooling : BOOL; // Cooling down to setpoint temp\n\theating : BOOL; // Heating up to setpoint temp\nEND_VAR\nVAR\n\t_currentTemp : REAL;\n\t_manualOutput : REAL;\n\t_manualMode : BOOL;\n\t_kp : REAL := 150;\n\t_ki : REAL := 2;\n\t_ll : REAL := 0;\n\t_lh : REAL := 1000;\n\t_deadBand : REAL := 1;\n\t_pwmHz : REAL := 1;\n\tupdateTimer : TON := (PT := T#100ms);\n\tPI : OSCAT_BASIC.CTRL_PI;\n\tPWM : OSCAT_BASIC.CTRL_PWM;\n\ttempScaled : DINT;\n\tdiffScaled : DINT;\n\tdiffLast : DINT;\n\tlastTemp : REAL;\n\tthermRunawayNHUpdateTimer : Standard.TON := (PT := T#60S);\n\tthermRunawayNHFaultTimer : Standard.TON := (PT := T#61S);\n\tthermRunawayOSUpdateTimer : Standard.TON := (PT := T#60S);\n\tthermRunawayOSFaultTimer : Standard.TON := (PT := T#61S);\nEND_VAR\n","LineInfoPersistence":"(string)323ad729-d110-4e40-bb14-efb2c2012ba5_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)487","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}