{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)df7634c7-742f-4be1-8432-603a419f3a3d","ParentGuid":"(Guid)00000000-0000-0000-0000-000000000000","Name":"(string)FB_MurrIO","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)829a18f2-c514-4f6e-9634-1df173429203","@Value":{"@Type":"829a18f2","@Value":{"ParentObjects":{"@Type":"fa2ee218:IDictionary","@Value":[{"@Key":"(Guid)21af5390-2942-461a-bf89-951aaf6999f1","@Value":"(Guid)9ca2a586-0e5b-477d-bf46-97baac593630"}]}}}}]},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","829a18f2":"{829a18f2-c514-4f6e-9634-1df173429203}","fa2ee218":"{fa2ee218-a39b-4b6d-b249-49dbddbd168a}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)//    Function Block: MurrIOFB\n//    Description: Alarms, faults, configuration of the Murr Cube67+ Bus Node\n//    Created by: Ben Hess\n//    Created Date: October 16th, 2019\nSUPER^();\n\n// Set bit 33 to true for 1 second to reset nodes\nrestartBusnodePulse.DwellSetting := 1000;\nrestartBusnodePulse(Q => ptrMachineOptionsManagementOutputs[4].1);\n\n// Exit this FB if invaild pointers set\nIF ptrMachineOptionsManagementOutputs = 0 OR ptrSystemStatusInputs = 0 THEN\n\tRETURN;\nEND_IF\n\n// MOM config - MOM bits are counted from Slot 001 to 4xx and are counted based on the \"Maximium\" configuration hard coded in the bus master\n// Here we can select which verison of code we have in order to utilize MOM correctly if we add additional modules in the future.\nCASE configVersion OF\n\tCONFIG_VERSIONS.V_1_1 :\t\t\n\t\t//\n\t\tptrMachineOptionsManagementOutputs[0].0 := NOT headNodeEnabled;\n\t\tptrMachineOptionsManagementOutputs[0].1 := NOT guardNodeEnabled;\n\t\tptrMachineOptionsManagementOutputs[0].2 := NOT dischargeNodeEnabled;\n\t\tptrMachineOptionsManagementOutputs[0].3 := NOT printerNodeEnabled;\n\t\tptrMachineOptionsManagementOutputs[0].4 := FALSE;\n\t\t\t\t\t\t\t\t\t\n\tCONFIG_VERSIONS.V_1_2, CONFIG_VERSIONS.V_1_3,CONFIG_VERSIONS.V_1_4 : \t\t\n\t\t// Added aux IO to 1.2 and BCV trigger to 1.3\n\t\tptrMachineOptionsManagementOutputs[0].0 := NOT headNodeEnabled;\n\t\tptrMachineOptionsManagementOutputs[0].1 := NOT guardNodeEnabled;\n\t\tptrMachineOptionsManagementOutputs[0].2 := NOT auxIONodeEnabled;\n\t\tptrMachineOptionsManagementOutputs[0].3 := NOT dischargeNodeEnabled;\n\t\tptrMachineOptionsManagementOutputs[0].4 := NOT printerNodeEnabled;\nEND_CASE\n\n// init loop index\nindex := 7;\n\n// init MOM fault present\nMOMFaultPresent := FALSE;\n\n// Loop through all 8 possible diagnostics looking for MOM error\nFOR i := 0 TO MAX_DIAGNOSTICS_COUNT-1 DO\n\tspecificErrorCode := ptrSystemStatusInputs[index];\n\tIF specificErrorCode = MOM_SPECIFIC_ERROR_CODE THEN\n\t\tMOMFaultPresent := TRUE;\n\tEND_IF\n\tindex := index + BYTES_PER_DIAGNOSTICS_RESULT;\nEND_FOR\nMOMDataConfigFail.faultTrigger := MOMFaultPresent;\n\n// Run config if IO bus node is waiting on config\nsystemStatusINT := ptrSystemStatusInputs^;\nsystemStatusState := systemStatusINT;\n\n// Prevent a IO node reset on boot for no reason\nIF Globals.firstScan THEN\n\tMOMConfigLast := ptrMachineOptionsManagementOutputs[0];\nEND_IF\n\n// Trigger fault for node not present, or node seen where one shouldn't be \nIF systemStatusState = MURR_SYSTEM_STATES.No_Comm_To_Configured_Node THEN\n\tcommFailNode.Trigger();\nEND_IF\n\n// A 0 at system state indicates comm fail to controller\nIF systemStatusState = 0 THEN\n\tcommFailController.Trigger();\nEND_IF\n\n// Alert user to MOM config active\nIF systemStatusState = MURR_SYSTEM_STATES.Waiting_For_MOM OR\n   systemStatusState = MURR_SYSTEM_STATES.Configuring_MOM OR\n   systemStatusState = MURR_SYSTEM_STATES.Internal_Comm_Disabled THEN\n\tconfigActive.active := TRUE;\nELSE\n\tconfigActive.active := FALSE;\nEND_IF\n\n// I/O Block is OK only in this state, otherwise we can't trust any I/O coming back\nok := (systemStatusState = MURR_SYSTEM_STATES.Internal_Comm_OK);\n\nCASE systemStatusState OF\n\tMURR_SYSTEM_STATES.Waiting_For_MOM: \t\t\t\n\t\t// Bit 32 is Configure MOM bit\n\t\tptrMachineOptionsManagementOutputs[4].0 := TRUE;\n\t\tptrMachineOptionsManagementOutputs[4].1 := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\n\tMURR_SYSTEM_STATES.Configuring_MOM : \t\t\t\n\t\tptrMachineOptionsManagementOutputs[4].0 := FALSE;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\nELSE\n\t\tptrMachineOptionsManagementOutputs[4].0 := FALSE;\n\t\t//IF config changes here, send it down after restarting\n\t\tIF ptrMachineOptionsManagementOutputs[0] <> MOMConfigLast THEN\n\t\t\trestartBusnodePulse.Trigger();\n\t\t\tMOMConfigLast := ptrMachineOptionsManagementOutputs[0];\n\t\tEND_IF\nEND_CASE\t\t\t\t\t\t\t\t\t","LineInfoPersistence":"(string)df7634c7-742f-4be1-8432-603a419f3a3d_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)FUNCTION_BLOCK FB_MurrIO EXTENDS FB_BaseComponent IMPLEMENTS IComponentStatus\nVAR_INPUT\n\theadNodeEnabled : BOOL;\n\tguardNodeEnabled : BOOL;\n\tprinterNodeEnabled : BOOL;\n\tdischargeNodeEnabled : BOOL;\n\tauxIONodeEnabled : BOOL;\n\tconfigVersion : CONFIG_VERSIONS;\n\tptrMachineOptionsManagementOutputs : POINTER TO BYTE;\n\tptrSystemStatusInputs : POINTER TO BYTE;\nEND_VAR\nVAR_OUTPUT\n\tMOMDataConfigFail : FB_Fault(name := 'Communication Fail - MOM configuration data is inaccurate');\n\tcommFailController : FB_Fault(name := 'Communication Fail - Bus Master to Controller');\n\tcommFailNode : FB_Fault(name := 'Communication Fail - Bus Master to I/O Node');\n\tconfigActive : Warning;\t// I/O Configuration Active, please wait\n\tok : BOOL; \t\t// I/O Configuration and Communication good\nEND_VAR\nVAR\n\ti : INT;\n    index : INT;\n    specificErrorCode : INT;\n    MOMFaultPresent : BOOL;\n\tsystemStatusINT : INT;\n\tsystemStatusState : MURR_SYSTEM_STATES;\n\tMOMConfigLast : BYTE;\n\trestartBusnodePulse : FB_MonostableMultivibrator;\nEND_VAR\n\nVAR CONSTANT\n    MOM_SPECIFIC_ERROR_CODE : INT := 101;\n    MAX_DIAGNOSTICS_COUNT : INT := 8;\n    BYTES_PER_DIAGNOSTICS_RESULT : INT := 8;\nEND_VAR","LineInfoPersistence":"(string)df7634c7-742f-4be1-8432-603a419f3a3d_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)1547","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}