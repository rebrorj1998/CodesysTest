{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)2f401737-c8fc-4b2b-a4f2-19e9bf4e2b57","ParentGuid":"(Guid)00000000-0000-0000-0000-000000000000","Name":"(string)FB_AdjustablePneumaticPassthrough","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)829a18f2-c514-4f6e-9634-1df173429203","@Value":{"@Type":"829a18f2","@Value":{"ParentObjects":{"@Type":"fa2ee218:IDictionary","@Value":[{"@Key":"(Guid)21af5390-2942-461a-bf89-951aaf6999f1","@Value":"(Guid)9ca2a586-0e5b-477d-bf46-97baac593630"}]}}}}]},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","829a18f2":"{829a18f2-c514-4f6e-9634-1df173429203}","fa2ee218":"{fa2ee218-a39b-4b6d-b249-49dbddbd168a}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)//    Function Block: AdjustablePassthroughFB\n//    Description:      The adjustable passthrough on the pneumatic head uses a closed loop stepper motor to \n//                    move the end stop for the jaw cylinders\n//    Created by: Ben Hess\n//    Created Date: Thursday, May 10, 2018\nSUPER^();\njogInONS(CLK := jogInPB);\njogOutONS(CLK := jogOutPB);\n//Add 2 inch offset\npassthroughPosition :=  (pressureBarEndStopMotor.CurrentPosition) - HMIData.passthroughOffset;\ntimerHomeDelay();\nfaultONS(CLK := HMIData.faultActive);\n\n\n//Go to idle when enabled\nenableONS(CLK := enable);\nIF enableONS.Q OR resetONS.Q THEN    \n    state := PASSTHROUGH_SERVO_STATES.Idle;\n\t_movePassthrough := FALSE;\n\tGlobals.jawMovingIn := FALSE;\n\t _homeEndStop := FALSE;\n\t timerHomeDelay.IN := FALSE;\n\t//passthroughSetpoint := HMIData.passthroughSetting + HMIData.passthroughOffset ;\nEND_IF\n\nIF NOT enable THEN\n    state := PASSTHROUGH_SERVO_STATES.Idle;\n\t_movePassthrough := FALSE;\n\t_homeEndStop := FALSE;\nEND_IF\n\n_ready := (_mode = DEVICE_MODES.Auto) AND NOT (state = PASSTHROUGH_SERVO_STATES.Fault);\nIF faultONS.OSR THEN\n\tpressureBarEndStopMotor.Stop();\n\tstate := PASSTHROUGH_SERVO_STATES.Idle;\nEND_IF\n\nCASE state OF\n    PASSTHROUGH_SERVO_STATES.Idle :                     // Go to ready state if no home required.  Otherwise go to ready if enabled. Stay in Idle if disabled.\n                                                        extendPressureBarLowPressureRequest := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\textendIBDRequest := FALSE;\n                                                        exhaustPressureBarRequest := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttimerHomeDelay.IN := FALSE;\n                                                        IF enable AND pressureBarEndStopMotor.HomeRequired THEN\n                                                            state := PASSTHROUGH_SERVO_STATES.HomingRequired;\n                                                        ELSIF enable THEN\n                                                            state := PASSTHROUGH_SERVO_STATES.Ready;\n                                                        END_IF\n                                                        \n    PASSTHROUGH_SERVO_STATES.HomingRequired :            //When Home Servo Pushbitton is pressed\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thomeRequired := TRUE;\n                                                        IF _homeEndStop THEN\n                                                            state := PASSTHROUGH_SERVO_STATES.StartHoming;\n                                                        END_IF\n                                                        \n    PASSTHROUGH_SERVO_STATES.StartHoming :                \n                                                        // Start motor homing sequence\n                                                        exhaustPressureBarRequest := TRUE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tGlobals.jawMovingIn := TRUE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t//extendPressureBarRequest := TRUE;\n                                                        IF _ackRequest THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpressureBarEndStopMotor.HomeNow();\n                                                            exhaustPressureBarRequest := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//extendPressureBarRequest := FALSE;\n                                                            _ackRequest := FALSE;\n                                                            state := PASSTHROUGH_SERVO_STATES.Homing;    \n                                                        END_IF        \n\n    \n    PASSTHROUGH_SERVO_STATES.Homing :                    //Move on to Home Complete once finished\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttimerHomeDelay.PT := T#200MS;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttimerHomeDelay.IN := TRUE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF NOT iPassthroughHomeSensorClear THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texhaustPressureBarRequest := TRUE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tGlobals.jawMovingIn := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF _ackRequest THEN \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texhaustPressureBarRequest := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF timerHomeDelay.Q THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF (NOT pressureBarEndStopMotor.HomeRequired) THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := PASSTHROUGH_SERVO_STATES.HomeComplete;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\texhaustPressureBarRequest := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_ackRequest := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttimerHomeDelay.IN := FALSE;\n                                                        \tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n                                                        \n    \n    PASSTHROUGH_SERVO_STATES.HomeComplete :             //Move on to Ready State once supervisor acks the cylinder request\n                                                        _homeEndStop := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tGlobals.jawMovingIn := FALSE;\n                                                        exhaustPressureBarRequest := TRUE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\thomeRequired := FALSE;\n                                                        IF _ackRequest THEN\n                                                            exhaustPressureBarRequest := FALSE;\n                                                            _ackRequest := FALSE;\n                                                            state := PASSTHROUGH_SERVO_STATES.Ready;    \n                                                        END_IF \n                                                      \n                                                        \n    PASSTHROUGH_SERVO_STATES.MovePassthroughOut :        // Move passthrough out\n                                                        exhaustPressureBarRequest := TRUE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\textendIBDRequest := TRUE;\n                                                        IF _ackRequest THEN\n                                                            pressureBarEndStopMotor.MoveToPosition(position := (passthroughSetpoint + HMIData.passthroughOffset), \n                                                                                    acceleration := 150, \n                                                                                    deceleration := 150, \n                                                                                    velocity := 2583);\n                                                            //\n                                                            exhaustPressureBarRequest := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\textendIBDRequest := FALSE;\n                                                            _ackRequest := FALSE;\n                                                            state := PASSTHROUGH_SERVO_STATES.MovingPassthroughOut;        \n                                                        END_IF\n                                                        \n\n                                                    \n                                                        \n    PASSTHROUGH_SERVO_STATES.MovingPassthroughOut :        //Move on to Passthrough Moved Out once position reached\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttimerHomeDelay.PT := T#200MS;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttimerHomeDelay.IN := TRUE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF timerHomeDelay.Q THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF (REAL_TO_INT((passthroughSetpoint)*100) = REAL_TO_INT(passthroughPosition*100)) THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := PASSTHROUGH_SERVO_STATES.PassthroughMovedOut;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttimerHomeDelay.IN := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF jogOutONS.OSF THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpassthroughTravel := ABS(capturePassthroughPos - passthroughPosition);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpressureBarEndStopMotor.Stop();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tGlobals.passthroughChangedFromJog := TRUE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := PASSTHROUGH_SERVO_STATES.PassthroughMovedOut;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n    PASSTHROUGH_SERVO_STATES.PassthroughMovedOut :       \n\t\t\t\t\t\t\t\t\t\t\t\t\t\texhaustPressureBarRequest := TRUE; \n                                                         IF _ackRequest THEN\n                                                            exhaustPressureBarRequest := FALSE;\n                                                            _ackRequest := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHMIData.passthroughChanges.Increment();\n                                                            cumulativeChangeCount := cumulativeChangeCount + 1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcumulativeChangeDistance := cumulativeChangeDistance + REAL_TO_UDINT((passthroughTravel * 10));\n                                                            state := PASSTHROUGH_SERVO_STATES.ExhaustPressureBarOnceMovedOut;    \n                                                        END_IF\n    \n\tPASSTHROUGH_SERVO_STATES.ExhaustPressureBarOnceMovedOut :\n\t\t\t\t\t\t\t\t\t\t\t\t\t\textendPressureBarLowPressureRequest := TRUE; \n                                                         IF _ackRequest THEN\n                                                            extendPressureBarLowPressureRequest := FALSE;\n                                                            _movePassthrough := FALSE;\n                                                            _ackRequest := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := PASSTHROUGH_SERVO_STATES.Ready;    \n                                                        END_IF\n                                                    \n    PASSTHROUGH_SERVO_STATES.MovePassthroughIn :        \n                                                        exhaustPressureBarRequest := TRUE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tGlobals.jawMovingIn := TRUE;\n                                                        IF _ackRequest THEN\n                                                            pressureBarEndStopMotor.MoveToPosition(position := (passthroughSetpoint + HMIData.passthroughOffset), \n                                                                                    acceleration := 150, \n                                                                                    deceleration := 150, \n                                                                                    velocity := 2583);\n                                                            //\n                                                            exhaustPressureBarRequest := FALSE;\n                                                            _ackRequest := FALSE;\n                                                            state := PASSTHROUGH_SERVO_STATES.MovingPassthroughIn;        \n                                                        END_IF\n                                                    \n                                                        \n    PASSTHROUGH_SERVO_STATES.MovingPassthroughIn :        //Move on to Passthrough Moved In once position reached\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttimerHomeDelay.PT := T#200MS;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttimerHomeDelay.IN := TRUE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF timerHomeDelay.Q THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF (REAL_TO_INT((passthroughSetpoint)*100) = REAL_TO_INT(passthroughPosition*100)) THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := PASSTHROUGH_SERVO_STATES.PassthroughMovedIn;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttimerHomeDelay.IN := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF jogInONS.OSF THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpassthroughTravel := ABS(capturePassthroughPos - passthroughPosition);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpressureBarEndStopMotor.Stop();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tGlobals.passthroughChangedFromJog := TRUE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := PASSTHROUGH_SERVO_STATES.PassthroughMovedIn;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n                                                        END_IF\n    PASSTHROUGH_SERVO_STATES.PassthroughMovedIn :        \n                                                        exhaustPressureBarRequest := TRUE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tGlobals.jawMovingIn := FALSE;\n                                                        IF _ackRequest THEN\n                                                            exhaustPressureBarRequest := FALSE;\n                                                            _movePassthrough := FALSE;\n                                                            _ackRequest := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tHMIData.passthroughChanges.Increment();\n                                                            cumulativeChangeCount := cumulativeChangeCount + 1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcumulativeChangeDistance := cumulativeChangeDistance + REAL_TO_UDINT((passthroughTravel * 10));\n                                                            state := PASSTHROUGH_SERVO_STATES.Ready;    \n                                                        END_IF\n                                                        \n                                                        \n    PASSTHROUGH_SERVO_STATES.Ready :                    // Keep track    \n                                                        IF jogInPB THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpassthroughSetpoint := 2.0 + HMIData.passthroughOffset;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcapturePassthroughPos := passthroughPosition;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := PASSTHROUGH_SERVO_STATES.MovePassthroughIn;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSIF jogOutPB THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpassthroughSetpoint := 8.0 + HMIData.passthroughOffset;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcapturePassthroughPos := passthroughPosition;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := PASSTHROUGH_SERVO_STATES.MovePassthroughOut;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSIF jogInONS.OSF OR jogOutONS.OSF THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tGlobals.passthroughChangedFromJog := TRUE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpressureBarEndStopMotor.Stop();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n                                                        IF _movePassthrough THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpassthroughTravel := ABS(passthroughPosition - (passthroughSetpoint + HMIData.passthroughOffset));\n                                                            IF mustMovePassthroughOut THEN\n                                                                state := PASSTHROUGH_SERVO_STATES.MovePassthroughOut;\n                                                                ELSE state := PASSTHROUGH_SERVO_STATES.MovePassthroughIn;\n                                                            END_IF\n                                                        END_IF\n                                                        IF _homeEndStop THEN\n                                                            state := PASSTHROUGH_SERVO_STATES.StartHoming;\n                                                        END_IF\n    \n    PASSTHROUGH_SERVO_STATES.Fault :   \t\t\t\t\tpressureBarEndStopMotor.Stop();        \nEND_CASE","LineInfoPersistence":"(string)2f401737-c8fc-4b2b-a4f2-19e9bf4e2b57_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)FUNCTION_BLOCK FB_AdjustablePneumaticPassthrough EXTENDS FB_BaseComponent IMPLEMENTS IComponentStatus\nVAR_INPUT\n\tpressureBarEndStopMotor : IPositionableMotor;\n\tjogInPB : BOOL;\n\tjogOutPB : BOOL;\nEND_VAR\nVAR_OUTPUT\n    homeRequired : BOOL; //Homing Required\n    passthroughPosition : REAL;\n    state : PASSTHROUGH_SERVO_STATES := PASSTHROUGH_SERVO_STATES.Idle; //State indication of Jaw Passthrough Servo\n    exhaustPressureBarRequest : BOOL; // Exhaust pressure bar request for passthrough movement\n    extendPressureBarLowPressureRequest : BOOL; // Extend pressure bar (Low Pressure) request for passthrough movement\n\textendPressureBarHighPressureRequest : BOOL; // Extend pressure bar (Low Pressure) request for passthrough movement\n\textendIBDRequest : BOOL;\t// Extend IBD request for passthrough movement\nEND_VAR\nVAR        \n    passthroughSetpoint : REAL;        // Passthrough setpoint in inches\n\tpassthroughTravel : REAL;\t\t\t\t// Passthrough travel total\n\tcapturePassthroughPos : REAL;\n    mustMovePassthroughOut : BOOL; //Flag to tell us that the setpoint requires us to move the passthrough out\n    _homeEndStop : BOOL;            // Home End Stop Command\n    _movePassthrough  : BOOL;        // Move Passthrough\n    _ackRequest : BOOL;                // Request Acknowledged from controller\n\tpassthroughSettingLast : REAL;\n\ttimerHomeDelay : TON;\n\tfaultONS : FB_ONS;\n\tjogInONS : FB_ONS;\n\tjogOutONS : FB_ONS;\nEND_VAR\nVAR_IN_OUT\n\tcumulativeChangeCount : DINT;\n\tcumulativeChangeDistance : UDINT;\nEND_VAR","LineInfoPersistence":"(string)2f401737-c8fc-4b2b-a4f2-19e9bf4e2b57_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)4121","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}