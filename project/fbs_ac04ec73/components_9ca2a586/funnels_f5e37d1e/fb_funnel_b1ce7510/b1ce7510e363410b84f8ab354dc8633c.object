{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)b1ce7510-e363-410b-84f8-ab354dc8633c","ParentGuid":"(Guid)00000000-0000-0000-0000-000000000000","Name":"(string)FB_Funnel","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)829a18f2-c514-4f6e-9634-1df173429203","@Value":{"@Type":"829a18f2","@Value":{"ParentObjects":{"@Type":"fa2ee218:IDictionary","@Value":[{"@Key":"(Guid)21af5390-2942-461a-bf89-951aaf6999f1","@Value":"(Guid)f5e37d1e-de78-4097-8ff3-7a5f933e3a4a"}]}}}}]},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","829a18f2":"{829a18f2-c514-4f6e-9634-1df173429203}","fa2ee218":"{fa2ee218-a39b-4b6d-b249-49dbddbd168a}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)//    Function Block: FunnelFB\n//    Description: Funnel\n//    Created by: Ben Hess\n//    Created Date: November 18th, 2019\n\n// \n\n\n// Setup timers\n_closingTimer(PT := TO_TIME(closingDwell * 1000));\n_openingTimer(PT := TO_TIME(openingDwell * 1000));\n_openingDelayTimer(PT := TO_TIME(openingDelay * 1000));\n\n// Turn on Open output after set delay\nIF _openingDelayTimer.Q THEN\n\t_openingDelayTimer.IN := FALSE;\n\toOpen := TRUE;\nEND_IF\n\n//\nIF _openRequest THEN\n\toClose := FALSE;\n\t_openRequest := FALSE;\n\t_openingDelayTimer.IN := TRUE;\nELSIF _closeRequest THEN\n\toOpen := FALSE;\n\t_openingDelayTimer.IN := FALSE;\n\toClose := TRUE;\n\t_closeRequest := FALSE;\nEND_IF\n\n//\nIF _reset OR NOT enable THEN\n\t_reset := FALSE;\n\t_openRequest := FALSE;\n\t_closeRequest := FALSE;\n\t_openingTimer.IN := FALSE;\n\t_closingTimer.IN := FALSE;\n\t_openingDelayTimer.IN := FALSE;\n\toClose := FALSE;\n\toOpen := FALSE;\nEND_IF\n\n//      \nIF feedback <> eActuatorFeedbackType.None THEN\n\topened := iOpened;\n\tclosed := iClosed;\nELSE\n\t_openingTimer.IN := oOpen;\n\t_closingTimer.IN := oClose;\n\topened := _openingTimer.Q;\n\tclosed := _closingTimer.Q;\nEND_IF\n\n// Fault Timer for Failed TO reach open/closed sensors\n_cylinderFault(\n\tfeedback := feedback,\n\textendCommand := oOpen, \n\textendedInput := iOpened, \n\tretractCommand := oClose, \n\tretractedInput := iClosed, \n\tfaultTime:= T#1S, \n\tfailToExtend=> failToOpen.faultTrigger, \n\tfailToRetract=> failToClose.faultTrigger\n);\nSUPER^();","LineInfoPersistence":"(string)b1ce7510-e363-410b-84f8-ab354dc8633c_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)FUNCTION_BLOCK FB_Funnel EXTENDS FB_BaseComponent\nVAR_INPUT\n \tiOpened : BOOL;\t\t\t \t\t  // Open sensor input\n \tiClosed : BOOL;\t     \t \t\t  // Closed sensor input\n\tfeedback : eActuatorFeedbackType; // Funnel type selected\n\topeningDelay : REAL;\n\topeningDwell : REAL;\n\tclosingDwell : REAL;\nEND_VAR\t\nVAR_OUTPUT\n\topened : BOOL;\t\t\t\t\t\t\t\t\t\t// Funnel Opened status\n\tclosed : BOOL;\t\t\t\t\t\t\t\t\t\t// Funnel Closed status\n\toClose : BOOL;\t\t\t\t\t\t\t\t\t    // Map to physical close output\n\toOpen : BOOL;\t\t\t\t\t\t\t\t\t    // Map to physical open output\n\tfailToOpen : FB_Fault(name := 'Failed to Open');\t// Failed to Open fault\n\tfailToClose : FB_Fault(name := 'Failed to Close');\t// Failed to Close fault\nEND_VAR\nVAR\n\t_closeRequest : BOOL;\t\t\t\t\t\t\t\t// Close reqested from Close()\n\t_openRequest : BOOL;\t\t\t\t\t\t\t\t// Open requested from Open()\n\t_openingDelayTimer : Standard.TON;\t\t\t\t\t// Open delay timer\n\t_openingTimer : Standard.TON;\t\t\t\t\t\t// Opening timer\n\t_closingTimer : Standard.TON;\t\t\t\t\t\t// Closing timer\n\t_cylinderFault : FB_CylinderFaults;                 // Cylinder Faults\nEND_VAR\n","LineInfoPersistence":"(string)b1ce7510-e363-410b-84f8-ab354dc8633c_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)1495","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}