{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)fe22b6c2-68b9-4f7b-8702-c77e3a035e74","ParentGuid":"(Guid)00000000-0000-0000-0000-000000000000","Name":"(string)FB_TL50_AdvancedMode","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)829a18f2-c514-4f6e-9634-1df173429203","@Value":{"@Type":"829a18f2","@Value":{"ParentObjects":{"@Type":"fa2ee218:IDictionary","@Value":[{"@Key":"(Guid)21af5390-2942-461a-bf89-951aaf6999f1","@Value":"(Guid)f173e532-08c9-4cad-8e9f-27d9b9cfab09"}]}}}}]},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","829a18f2":"{829a18f2-c514-4f6e-9634-1df173429203}","fa2ee218":"{fa2ee218-a39b-4b6d-b249-49dbddbd168a}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)//\n//  FB_TL50_AdvancedMode\n//  FBs/Indication/FB_TL50_StackLight/Advanced Mode/FB_TL50_AdvancedMode\n//\n//  Created by Ben Hess on 4/18/2021. \n//  Copyright (C) 2022 Sharp Packaging Systems By Pregis. All rights reserved.\n//\n\n//  IOLink Stack Light by Banner. Assumes 4 segments\n\n\n// Set all segments to zero and then only set those that are active\nClearSegments();\nIF baggerReady THEN\n\t_segments[baggerStatusSegment] := _baggerReadyProfile;\nEND_IF\nIF baggerInCycle THEN\n\t_segments[baggerStatusSegment] := _baggerInCycleProfile;\nEND_IF\nIF baggerExternalInhibited THEN\n\t_segments[baggerStatusSegment] := _baggerInhibitedProfile;\nEND_IF\nIF baggerFaulted THEN\n\t_segments[baggerFaultSegment] := _baggerFaultedProfile;\nEND_IF\nIF bagsLow THEN\n\t_segments[baggerBagsLowSegment] := _bagsLowProfile;\nEND_IF\nIF bagOpenRetryActive THEN\n\t_segments[bagOpenRetrySegment] := _bagOpenRetryActiveProfile;\nEND_IF\nIF baggerHeatingUp THEN\n\t_segments[baggerStatusSegment] := _heatingUpProfile;\nEND_IF\n\n// Audible State only triggered by fault segment for now\n_IOLinkData[0] := _segments[baggerFaultSegment].audibleState;\n\n// Pack The Selected Profiles Data To The Correct IO-Link Bytes //\n// Iterate through all 4 segments\nFOR i := TL50Segments.Top TO TL50Segments.Bottom BY -1 DO\n\tIOLinkIndexByte := (SIZE_OF_IOLINK_DATA - (i * SIZE_OF_SEGMENT_DATA));\n\t// Segment Byte 0 \n\t_IOLinkData[IOLinkIndexByte].0 := _segments[i].colorTwo.0;\n\t_IOLinkData[IOLinkIndexByte].1 := _segments[i].colorTwo.1;\n\t_IOLinkData[IOLinkIndexByte].2 := _segments[i].colorTwo.2;\n\t_IOLinkData[IOLinkIndexByte].3 := _segments[i].colorTwo.3;\n\t_IOLinkData[IOLinkIndexByte].4 := _segments[i].colorTwoIntensity.0;\n\t_IOLinkData[IOLinkIndexByte].5 := _segments[i].colorTwoIntensity.1;\n\t_IOLinkData[IOLinkIndexByte].6 := _segments[i].colorTwoIntensity.2;\n\t_IOLinkData[IOLinkIndexByte].7 := _segments[i].animationDirection.0;\n\t// Segment Byte 1\n\t_IOLinkData[IOLinkIndexByte + 1].0 := _segments[i].animationType.0;\n\t_IOLinkData[IOLinkIndexByte + 1].1 := _segments[i].animationType.1;\n\t_IOLinkData[IOLinkIndexByte + 1].2 := _segments[i].animationType.2;\n\t_IOLinkData[IOLinkIndexByte + 1].3 := _segments[i].animationSpeed.0;\n\t_IOLinkData[IOLinkIndexByte + 1].4 := _segments[i].animationSpeed.1;\n\t_IOLinkData[IOLinkIndexByte + 1].5 := _segments[i].animationPattern.0;\n\t_IOLinkData[IOLinkIndexByte + 1].6 := _segments[i].animationPattern.1;\n\t_IOLinkData[IOLinkIndexByte + 1].7 := _segments[i].animationPattern.2;\n\t// Segment Byte 2\n\t_IOLinkData[IOLinkIndexByte + 2].0 := _segments[i].colorOne.0;\n\t_IOLinkData[IOLinkIndexByte + 2].1 := _segments[i].colorOne.1;\n\t_IOLinkData[IOLinkIndexByte + 2].2 := _segments[i].colorOne.2;\n\t_IOLinkData[IOLinkIndexByte + 2].3 := _segments[i].colorOne.3;\n\t_IOLinkData[IOLinkIndexByte + 2].4 := _segments[i].colorOneIntensity.0;\n\t_IOLinkData[IOLinkIndexByte + 2].5 := _segments[i].colorOneIntensity.1;\n\t_IOLinkData[IOLinkIndexByte + 2].6 := _segments[i].colorOneIntensity.2;\n\t_IOLinkData[IOLinkIndexByte + 2].7 := _segments[i].animationDirection.0;\nEND_FOR\n\n// SEND IT!\nIOLinkData^ := _IOLinkData;","LineInfoPersistence":"(string)fe22b6c2-68b9-4f7b-8702-c77e3a035e74_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)FUNCTION_BLOCK FB_TL50_AdvancedMode\nVAR_INPUT\n\tIOLinkData : POINTER TO ARRAY[0..30] OF BYTE;\n\tbaggerReady : BOOL;\n\tbaggerFaulted : BOOL;\n\tbaggerInCycle : BOOL;\n\tbaggerExternalInhibited : BOOL;\n\tbagsLow : BOOL;\n\tbagOpenRetryActive : BOOL;\n\tbaggerHeatingUp : BOOL;\n\t\n\tbaggerFaultSegment : INT := TL50Segments.Top;\n\tbaggerStatusSegment : INT := TL50Segments.SecondDown;\n\tbaggerBagsLowSegment : INT := TL50Segments.ThridDown;\n\tbagOpenRetrySegment : INT := TL50Segments.Bottom;\nEND_VAR\nVAR\n\t_IOLinkStateOutput : BYTE;\n\t_IOLinkData : ARRAY[0..30] OF BYTE;\n\t\n\t_segmentOffProfile : TL50SegmentProfile := (\n\tcolorOne:= 0, \t\t\t \n\tcolorOneIntensity:= TL50Intensity.Off, \n\tanimationType:= 0, \n\tanimationSpeed:= 0, \n\tanimationPattern:= 0, \n\tcolorTwo:= 0, \n\tcolorTwoIntensity:= TL50Intensity.Off, \n\tanimationDirection:= 0,\n\taudibleState := TL50AudibleStates.Off);\n\t\n  \t_baggerReadyProfile : TL50SegmentProfile := (\n\tcolorOne:= TL50Colors.Green, \n\tcolorOneIntensity:= TL50Intensity.High, \n\tanimationType:= TL50AnimationTypes.Flash, \n\t//animationSpeed:= , \n\t//animationPattern:= , \n\t//colorTwo:= , \n\tcolorTwoIntensity:= TL50Intensity.Off, \n\t//animationDirection:= ,\n\taudibleState := TL50AudibleStates.Off);\n\t\n  _baggerInCycleProfile : TL50SegmentProfile := (\n\tcolorOne:= TL50Colors.Green, \n\tcolorOneIntensity:= TL50Intensity.High, \n\tanimationType:= TL50AnimationTypes.Steady, \n\t//animationSpeed:= , \n\t//animationPattern:= , \n\t//colorTwo:= , \n\tcolorTwoIntensity:= TL50Intensity.Off, \n\t//animationDirection:= ,\n\taudibleState := TL50AudibleStates.Off);\n\t\n  _baggerInhibitedProfile : TL50SegmentProfile := (\n\tcolorOne:= TL50Colors.Yellow, \n\tcolorOneIntensity:= TL50Intensity.High, \n\tanimationType:= TL50AnimationTypes.fiftyfiftyRotate, \n\tanimationSpeed:= TL50AnimationSpeeds.Medium, \n\tanimationPattern:= TL50AnimationPatterns.Flash, \n\tcolorTwo:= TL50Colors.White, \n\tcolorTwoIntensity:= TL50Intensity.High, \n\tanimationDirection:= TL50AnimationDirection.CCW ,\n\taudibleState := TL50AudibleStates.Off);\n \n  _baggerFaultedProfile : TL50SegmentProfile := (\n\tcolorOne:= TL50Colors.Red, \n\tcolorOneIntensity:= TL50Intensity.High, \n\tanimationType:= TL50AnimationTypes.Flash, \n\tanimationSpeed:= TL50AnimationSpeeds.Slow, \n\t//animationPattern:= , \n\t//colorTwo:= , \n\tcolorTwoIntensity:= TL50Intensity.Off, \n\t//animationDirection:= ,\n\taudibleState := TL50AudibleStates.Off);\n\t\n  _bagsLowProfile : TL50SegmentProfile := (\n\tcolorOne:= TL50Colors.Orange, \n\tcolorOneIntensity:= TL50Intensity.High, \n\tanimationType:= TL50AnimationTypes.Steady, \n\t//animationSpeed:= TL50AnimationSpeeds.Medium, \n\t//animationPattern:= , \n\t//colorTwo:= , \n\tcolorTwoIntensity:= TL50Intensity.Off, \n\t//animationDirection:= ,\n\taudibleState := TL50AudibleStates.Off);\n\t\n\t_bagOpenRetryActiveProfile : TL50SegmentProfile := (\n\tcolorOne:= TL50Colors.Orange, \n\tcolorOneIntensity:= TL50Intensity.High, \n\tanimationType:= TL50AnimationTypes.Flash, \n\tanimationSpeed:= TL50AnimationSpeeds.Fast, \n\t//animationPattern:= , \n\t//colorTwo:= , \n\tcolorTwoIntensity:= TL50Intensity.Off, \n\t//animationDirection:= ,\n\taudibleState := TL50AudibleStates.Off);\n\t\n\t_heatingUpProfile : TL50SegmentProfile := (\n\tcolorOne:= TL50Colors.Orange, \n\tcolorOneIntensity:= TL50Intensity.High, \n\tanimationType:= TL50AnimationTypes.fiftyfiftyRotate, \n\tanimationSpeed:= TL50AnimationSpeeds.Slow, \n\t//animationPattern:= , \n\tcolorTwo:= TL50Colors.Amber, \n\tcolorTwoIntensity:= TL50Intensity.High, \n\t//animationDirection:= ,\n\taudibleState := TL50AudibleStates.Off);\n  \t_segments : ARRAY[1..4] OF TL50SegmentProfile;  //1 = bottom segment, 4 = top. Using \"from 1\" to match Banner documentation\n\ti : INT;\n\tIOLinkIndexByte : INT;\nEND_VAR\nVAR CONSTANT\n\tSIZE_OF_IOLINK_DATA : INT := 31;  \t// Total size in bytes of IOLink Image\n\tSIZE_OF_SEGMENT_DATA : INT := 3;\t\t// Size in bytes of each light segment in IOLink Image\nEND_VAR\n","LineInfoPersistence":"(string)fe22b6c2-68b9-4f7b-8702-c77e3a035e74_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)1381","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}