{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)291ffa35-fd3f-407e-aba0-2ae6d7377e4a","ParentGuid":"(Guid)00000000-0000-0000-0000-000000000000","Name":"(string)FB_MotorizedSealFlatteners","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)829a18f2-c514-4f6e-9634-1df173429203","@Value":{"@Type":"829a18f2","@Value":{"ParentObjects":{"@Type":"fa2ee218:IDictionary","@Value":[{"@Key":"(Guid)21af5390-2942-461a-bf89-951aaf6999f1","@Value":"(Guid)c2761314-bdc0-40c6-afc0-b20c945c18cf"}]}}}}]},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","829a18f2":"{829a18f2-c514-4f6e-9634-1df173429203}","fa2ee218":"{fa2ee218-a39b-4b6d-b249-49dbddbd168a}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)//    Function Block:  MotorizedSealFlattenersFB\n//    Description: State machine and motor management for motorized seal flateners\n//    Currently, this code requires one to use the Oriental drive with pre-programmed \n//    sequence for the horizontal axis\n//    Created by: Ben Hess\n//    Created Date: Friday, April 6, 2018\n\nSUPER^();\n// Temporary delay between states for testing\n_fingersDownDelay();\n_fingersUpDelay();\nbagDropDelay(PT := TO_TIME(HMIData.bagDropTime * 1000));\ndelay();\njogInONS(CLK := jogIn);\njogOutONS(CLK := jogOut);\n\n//\noutSetpoint := HMIData.bagWidth + 0.2;\nbagHoldingSetpoint := HMIData.bagWidth;\n\n// Setup the vertical axis motor\nsealFlattenersVerticalAxis.Execute();\n\n//\ntimeoutTimer();\nIF timeoutTimer.Q AND NOT bagDropDelay.IN THEN\n\ttimeoutFault := TRUE;\nEND_IF\n\n//\nsealFlattenersHorizontalAxisMotor(\n\tptrEIPInputs := ADR(sealFlattenerHorizontalMotorInputs),\n    ptrEIPOutputs := ADR(sealFlattenerHorizontalMotorOutputs),\n    stepsPerInchSetpoint := Globals.STEPS_PER_INCH_SEAL_FLATTENER_HORIZONTAL_AXIS_MOTOR,\n\treversePolarity := TRUE, \n\tdefaultCurrentSetpoint := defaultCurrentMSF, \n\tcommFail := sealFlattenerMotorCommFailInput,\n\tisHomable := enable);\nsealFlattenersHorizontalAxisMotor.Execute();\nposition := sealFlattenersHorizontalAxisMotor.absolutePositonInches;\n// Report as ready if mode is auto and we're not faulted\n_ready := (_mode = DEVICE_MODES.Auto) AND NOT (state = SEAL_FLATTENER_STATES.Fault);\n\nIF enableONS.Q OR resetONS.Q THEN \n\t_reset := FALSE;\n\ttimeoutFault := FALSE;\n\ttimeoutTimer.IN := FALSE;\n\tbagDropDelay.IN := FALSE;\n\thandLoadRequested := FALSE;\n\tstate := SEAL_FLATTENER_STATES.Idle;\n\tsealFlattenersHorizontalAxisMotor.Reset();\n\tClearCommands();\nEND_IF\n\nIF NOT enable THEN\n    state := SEAL_FLATTENER_STATES.Fault;\nEND_IF\n\n// Move seal flatteners out of the way when disabled\nenableMotorizedSealFlattenersONS(CLK := enable);\nIF enableMotorizedSealFlattenersONS.OSF THEN\n\tsealFlattenersVerticalAxis.Retract();\n\tIF (HMIData.baggerModelSelection = ModelSelection.Pro18_1174) OR (HMIData.baggerModelSelection = ModelSelection.Pro18_1183) THEN\n\t\tsealFlattenersHorizontalAxisMotor.MoveToPosition(position := 17.8, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tacceleration := horizontalAxisAccel,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeceleration := horizontalAxisDecel,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvelocity := moveOutSpeed);   \n\tELSE\n\t\tsealFlattenersHorizontalAxisMotor.MoveToPosition(position := 23.8, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\tacceleration := horizontalAxisAccel,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeceleration := horizontalAxisDecel,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvelocity := moveOutSpeed);    \n\tEND_IF\nEND_IF\n\n// State amchine for motorized seal flatteners\nCASE state OF\n    \n    SEAL_FLATTENER_STATES.Idle :                                    // If enabled move to out\n                                                                    IF enable AND semiAutoModeSelected OR (autoModeSelected AND _amMoveOut) THEN\n                                                                        state := SEAL_FLATTENER_STATES.MoveFlattenersOut;\n                                                                        ClearCommands();\n                                                                    END_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// If enabled move to out\n                                                                    IF enable AND (autoModeSelected AND _amMoveToFeedToSeal) THEN\n                                                                        state := SEAL_FLATTENER_STATES.MoveFlattenersInForFeedToSeal;\n                                                                        ClearCommands();\n                                                                    END_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF enable AND autoModeSelected AND _amMoveIn OR _amMoveInToBagHolding THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsealFlattenersVerticalAxis.Retract();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := SEAL_FLATTENER_STATES.MoveFlattenersIn;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tClearCommands();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF jogInONS.OSR THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsealFlattenersHorizontalAxisMotor.MoveDistance(distance := -18, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tacceleration := horizontalAxisAccel, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeceleration := horizontalAxisDecel, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvelocity := jogSpeed);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSIF jogOutONS.OSR THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsealFlattenersHorizontalAxisMotor.MoveDistance(distance := 18, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tacceleration := horizontalAxisAccel, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeceleration := horizontalAxisDecel, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvelocity := jogSpeed);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSIF jogInONS.OSF OR jogOutONS.OSF THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsealFlattenersHorizontalAxisMotor.Stop();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF raiseService THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsealFlattenersVerticalAxis.Retract();  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\traiseService := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSIF lowerService THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsealFlattenersVerticalAxis.Extend();  \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlowerService := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF moveToManualSetpoint THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsealFlattenersHorizontalAxisMotor.MoveToPosition(position := manualPosSetpoint, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tacceleration := horizontalAxisAccel, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdeceleration := horizontalAxisDecel, \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvelocity := moveFingersSpeed);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmoveToManualSetpoint := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbagDropDelay.IN := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttimeoutTimer.IN := FALSE;\n                                                                    \n    SEAL_FLATTENER_STATES.MoveFlattenersOut :                       // Move flatteners to out position\n                                                                    // SealFlattenersHorizontalAxisMotor.StartOperation();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttimeoutTimer.IN := TRUE;\n                                                                    sealFlattenersHorizontalAxisMotor.MoveToPositionTorque(position := outSetpoint, \n                                                                                                                        acceleration := horizontalAxisAccel,\n                                                                                                                        deceleration := horizontalAxisDecel,\n                                                                                                                        velocity := moveOutSpeed,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrent := outCurrentMSF);                                                    \n                                                                    state := SEAL_FLATTENER_STATES.MovingFlattenersOut;\n                                                                    \n    SEAL_FLATTENER_STATES.MovingFlattenersOut :                     // \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttimeoutTimer.IN := TRUE;\n                                                                    delay.IN := TRUE;\n                                                                    IF delay.Q THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF sealFlattenersHorizontalAxisMotor.CommandAcknowledged AND (sealFlattenersHorizontalAxisMotor.CurrentPosition >= (bagHoldingSetpoint - 1.5) OR sealFlattenersHorizontalAxisMotor.alarms.currentFoldback) THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := SEAL_FLATTENER_STATES.MovedFlattenersOut;\n                                                                        \tdelay.IN := FALSE; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttimeoutTimer.IN := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n                                                                    END_IF\n                                                                    \n    SEAL_FLATTENER_STATES.MovedFlattenersOut :                      // Move flatteners to clearance position state\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttimeoutTimer.IN := FALSE;\n                                                                    IF enable AND semiAutoModeSelected OR (autoModeSelected AND _amMoveClearance) THEN\n                                                                        state := SEAL_FLATTENER_STATES.MoveFlattenersUpAndToClearance;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsealFlattenersVerticalAxis.Retract();  \n                                                                        ClearCommands();\n                                                                    END_IF\n    \n    SEAL_FLATTENER_STATES.MoveFlattenersUpAndToClearance :          // Move flatteners to clearance position\n                                                                    //sealFlattenersHorizontalAxisMotor.NextSequence();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttimeoutTimer.IN := TRUE;\n                                                                    sealFlattenersHorizontalAxisMotor.MoveToPosition(position := (outSetpoint - clearanceOffset), \n                                                                                                                        acceleration := horizontalAxisAccel,\n                                                                                                                        deceleration := horizontalAxisDecel,\n                                                                                                                        velocity := moveOutSpeed);                            \n                                                                    state := SEAL_FLATTENER_STATES.MovingFlattenersUpAndToClearance;    \n    \n    SEAL_FLATTENER_STATES.MovingFlattenersUpAndToClearance :        \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdelay.IN := TRUE;\t\n                                                                    IF delay.Q THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF sealFlattenersHorizontalAxisMotor.CommandAcknowledged AND sealFlattenersHorizontalAxisMotor.InPosition THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF _fingersUpDelay.Q THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := SEAL_FLATTENER_STATES.MovedFlattenersUpAndToClearance;    \n                                                                        \t\tdelay.IN := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_fingersUpDelay.IN := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n                                                                    END_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_fingersUpDelay.IN := TRUE;\n                                                                    \n    SEAL_FLATTENER_STATES.MovedFlattenersUpAndToClearance :         // Move flatteners to up state\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbagDropDelay.IN := TRUE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF bagDropDelay.Q THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttimeoutTimer.IN := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbagDropDelay.IN := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := SEAL_FLATTENER_STATES.MoveFlattenersToBagFeed;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tSEAL_FLATTENER_STATES.MoveFlattenersToBagFeed :      \t\t\t// Move flatteners to out of the way of the bag for feeding\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF (HMIData.baggerModelSelection = ModelSelection.Pro18_1174) OR (HMIData.baggerModelSelection = ModelSelection.Pro18_1183) THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF (outSetpoint + clearanceOffset) <= 17.8 THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbagFeedPosition := (outSetpoint + clearanceOffset);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSE\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbagFeedPosition := 17.8;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSE\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF (outSetpoint + clearanceOffset) <= 23.8 THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbagFeedPosition := (outSetpoint + clearanceOffset);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSE\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbagFeedPosition := 23.8;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttimeoutTimer.IN := TRUE;\n                                                                    sealFlattenersHorizontalAxisMotor.MoveToPosition(position := bagFeedPosition, \n                                                                                                                        acceleration := horizontalAxisAccel,\n                                                                                                                        deceleration := horizontalAxisDecel,\n                                                                                                                        velocity := moveInSpeed);              \n                                                                    state := SEAL_FLATTENER_STATES.MovingFlattenersToBagFeed;\n\t\n   SEAL_FLATTENER_STATES.MovingFlattenersToBagFeed :        \t\t\tdelay.IN := TRUE;\n                                                                    IF delay.Q THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF sealFlattenersHorizontalAxisMotor.CommandAcknowledged AND sealFlattenersHorizontalAxisMotor.InPosition THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := SEAL_FLATTENER_STATES.MovedFlattenersToBagFeed;    \n                                                                        \tdelay.IN := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n                                                                    END_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\tSEAL_FLATTENER_STATES.MovedFlattenersToBagFeed:\t\t\t\t\t       // Move flatteners to up state\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttimeoutTimer.IN := FALSE;\n                                                                    IF enable AND semiAutoModeSelected OR (autoModeSelected AND (_amMoveInToBagHolding OR _amMoveIn OR _amMoveHandLoad)) THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := SEAL_FLATTENER_STATES.MoveFlattenersIn;\n                                                                    END_IF\n                                           \n    SEAL_FLATTENER_STATES.MoveFlattenersIn :                        // Move flatteners up and in\n                                                                    //sealFlattenersHorizontalAxisMotor.NextSequence(); \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttimeoutTimer.IN := TRUE;   \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF HMIData.funnelFactorySelection <> FunnelSelection.NotInstalled AND HMIData.funnelInUse THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_inSP := _inSPForFunnel;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSE\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_inSP := inSetpoint;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n                                                                    sealFlattenersHorizontalAxisMotor.MoveToPosition(position := _inSP, \n                                                                                                                        acceleration := horizontalAxisAccel,\n                                                                                                                        deceleration := horizontalAxisDecel,\n                                                                                                                        velocity := moveInSpeed);                                                    \n                                                                    state := SEAL_FLATTENER_STATES.MovingFlattenersIn;\n                                                                \n                                                                    \n    SEAL_FLATTENER_STATES.MovingFlattenersIn :                      // If we did that command well move on \n                                                                        delay.IN := TRUE;\n                                                                        IF delay.Q THEN\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinPositionONS(CLK :=sealFlattenersHorizontalAxisMotor.InPosition);\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t//IF sealFlattenersHorizontalAxisMotor.CommandAcknowledged AND sealFlattenersHorizontalAxisMotor.InPosition THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF sealFlattenersHorizontalAxisMotor.CommandAcknowledged AND inPositionONS.OSR THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := SEAL_FLATTENER_STATES.MovedFlattenersIn;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdelay.IN := FALSE;    \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n                                                                        END_IF \n                                                                    \n    SEAL_FLATTENER_STATES.MovedFlattenersIn :                        // Now that we're up and in move to down and 4 corners/bag holding\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttimeoutTimer.IN := FALSE;\n                                                                    IF enable AND semiAutoModeSelected OR (autoModeSelected AND (_amMoveInToBagHolding OR _amMoveHandLoad)) THEN\n                                                                        state := SEAL_FLATTENER_STATES.MovingFlattenersDown;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t sealFlattenersVerticalAxis.Extend();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF _amMoveHandLoad THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t handLoadRequested := TRUE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n                                                                        ClearCommands();\n                                                                    END_IF    \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF enable AND (autoModeSelected AND _amMoveOut) THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsealFlattenersHorizontalAxisMotor.MoveToPosition(position := outSetpoint, \n                                                                                                                        acceleration := horizontalAxisAccel,\n                                                                                                                        deceleration := horizontalAxisDecel,\n                                                                                                                        velocity := moveInSpeed);                                                    \n                                                                    \tstate := SEAL_FLATTENER_STATES.Idle;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tClearCommands();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n    \n    SEAL_FLATTENER_STATES.MoveFlattenersDown :            \t\t\t// Do moves for down and bag holding\n                                                                    state := SEAL_FLATTENER_STATES.MovingFlattenersDown;\n                             \n    SEAL_FLATTENER_STATES.MovingFlattenersDown :            \n                                                                        //IF sealFlattenersVerticalAxis.CommandAcknowledged AND sealFlattenersVerticalAxis.InPosition THEN\n                                                                       \t_fingersDownDelay.IN := TRUE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \tIF _fingersDownDelay.Q THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF handLoadRequested THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := SEAL_FLATTENER_STATES.Idle;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thandLoadRequested := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSE\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := SEAL_FLATTENER_STATES.MoveFlattenersToBagHolding;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t_fingersDownDelay.IN := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF \n                                                                        //END_IF \n                                                                        \n\tSEAL_FLATTENER_STATES.MovedFlattenersDown :\n\n\tSEAL_FLATTENER_STATES.MoveFlattenersInForFeedToSeal:\n\t\t// Do moves for down and bag holding\n    \ttimeoutTimer.IN := TRUE;    \n    \tsealFlattenersHorizontalAxisMotor.MoveToPosition(\n\t\t\tposition := bagHoldingSetpoint - FEED_TO_SEAL_INSET, \n    \t    acceleration := horizontalAxisAccel,\n    \t    deceleration := horizontalAxisDecel,\n    \t    velocity := moveBagHoldingSpeed\n\t\t);                                                \n    \tstate := SEAL_FLATTENER_STATES.MovingFlattenersToBagHolding;\n\t\n\tSEAL_FLATTENER_STATES.MovingFlattenersInForFeedToSeal:\n\t\tdelay.IN := TRUE;\n        IF delay.Q THEN\n\t\t \tIF sealFlattenersHorizontalAxisMotor.CommandAcknowledged THEN\n\t\t\t\tstate := SEAL_FLATTENER_STATES.MovedFlattenersToBagHolding;\n              \tdelay.IN := FALSE; \n\t\t\tEND_IF   \n        END_IF \n\t\n\tSEAL_FLATTENER_STATES.MovedFlattenersInforFeedToSeal:\n    \ttimeoutTimer.IN := FALSE;\n\t\tstate := SEAL_FLATTENER_STATES.Idle; \t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t                             \n    SEAL_FLATTENER_STATES.MoveFlattenersToBagHolding :            // Do moves for down and bag holding\n                                                                  // sealFlattenersHorizontalAxisMotor.NextSequence();\n                                                                  timeoutTimer.IN := TRUE;    \n                                                                  sealFlattenersHorizontalAxisMotor.MoveToPositionTorque(position := bagHoldingSetpoint, \n                                                                                                                  acceleration := horizontalAxisAccel,\n                                                                                                                  deceleration := horizontalAxisDecel,\n                                                                                                                  velocity := moveBagHoldingSpeed,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrent := bagHoldingCurrentMSF);                                                \n                                                                  state := SEAL_FLATTENER_STATES.MovingFlattenersToBagHolding;\n                                                                        \n    SEAL_FLATTENER_STATES.MovingFlattenersToBagHolding :          \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  delay.IN := TRUE;\n                                                                  IF delay.Q THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  \tIF sealFlattenersHorizontalAxisMotor.CommandAcknowledged THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := SEAL_FLATTENER_STATES.MovedFlattenersToBagHolding;\n                                                                        delay.IN := FALSE; \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF   \n                                                                  END_IF \n                                                                        \n    SEAL_FLATTENER_STATES.MovedFlattenersToBagHolding :           \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  timeoutTimer.IN := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  state := SEAL_FLATTENER_STATES.Idle;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  HMIData.motorizedSealFlattenerCycles.Increment();\n                                                                  Globals.motorizedSealFlattenersCount := Globals.motorizedSealFlattenersCount + 1;\n                                                                  Globals.sealFlattenerFingersCount := Globals.sealFlattenerFingersCount + 1;\nEND_CASE","LineInfoPersistence":"(string)291ffa35-fd3f-407e-aba0-2ae6d7377e4a_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)FUNCTION_BLOCK FB_MotorizedSealFlatteners EXTENDS FB_BaseComponent IMPLEMENTS IComponentStatus\nVAR_INPUT\n    {warning 'TODO: Make a struct for some of these - too many inputs'}\n\tsealFlattenersVerticalAxis : ICylinder();\n    clearanceOffset : REAL := 2.0;        // Clearance Offset in inches\n\tbagFeedPosition : REAL;\n    inSetpoint : REAL := 1.25;            // In setpoint in inches\n    outSetpoint : REAL := 17.7;            // Out (sealing) setpoint in inches\n    bagHoldingSetpoint : REAL := 17;    // Bag holding setpoint in inches            \n    clearanceSpeed : INT := 3000;        // Speed to move in clearance move\n    moveInSpeed : INT := 3000;            // Speed to move in in move\n    moveOutSpeed : INT := 1000;            // Speed to move in out move\n    moveBagHoldingSpeed : INT := 1000;    // Speed to move in bag holding move\n    fingersUpSetpoint : REAL := 0;     // Fingers Up setpoint in inches\n    fingersDownSetpoint : REAL := 1.1; // Fingers down setpoint in inches\n    moveFingersSpeed : INT := 2000;        // Speed to move fingers\n    horizontalAxisAccel : INT := 1000;    // Accel setpoint for horizontal axis\n    horizontalAxisDecel : INT := 1000;    // Decel Setpoint for horizontal axis\n    verticalAxisAccel : INT := 150;    // Accel setpoint for vertical axis\n    verticalAxisDecel : INT := 150;    // Decel Setpoint for vertical axis\n    testMovePB : BOOL;\n    testMoveSP : REAL;\n    stopPB : BOOL;\n    startPB : BOOL;\n    nextSeqPB : BOOL;\n    delay : TON := (PT:= T#25MS);\n\t_fingersUpDelay : Standard.TON := (PT := T#50MS);\n    _fingersDownDelay : Standard.TON := (PT := T#250MS);\n\tsealFlattenerMotorCommFailInput : BOOL;\n\tmanualPosSetpoint : REAL;\n\t\nEND_VAR\nVAR_IN_OUT\n\tjogIn : BOOL;\n\tjogOut : BOOL;\n\traiseService : BOOL;\n\tlowerService : BOOL;\n\tmoveToManualSetpoint : BOOL;\nEND_VAR\nVAR_OUTPUT\n    state : SEAL_FLATTENER_STATES;\n\ttimeoutFault : BOOL;\n\tposition : REAL;\nEND_VAR\nVAR\n\tjogInONS: FB_ONS;\n\tjogOutONS: FB_ONS;\n\tjogSpeed : INT := 100;\n    sealFlattenersHorizontalAxisMotor : FB_AppliedMotionStepServoEIPBaseQX();\n\tdefaultCurrentMSF : DINT := 150;\n\toutCurrentMSF : DINT := 150;\n\tbagHoldingCurrentMSF : DINT := 110;\n\ttimeoutTimer : Standard.TON := (PT := T#5S);\n    enableMotorizedSealFlattenersONS : FB_ONS();\n\tbagDropDelay : Standard.TON := (PT := T#1S);    \n    _amMoveOut : BOOL;                // Auto mode move out command\n\t_amMoveIn : BOOL;\n\t_amMoveToFeedToSeal : BOOL;\n    _amMoveClearance : BOOL;            // Auto mode move Clearance command\n    _amMoveInToBagHolding : BOOL;    // Auto mode move in then bag holding command\n\t_amMoveHandLoad : BOOL;\t\t\t// Auto move to hand load positon command\n\thandLoadRequested : BOOL;\n\ttestTorque : BOOL;\n\t_testEnable : BOOL;\n\t_testDisable : BOOL;\n\t_inSP : REAL;\n\t_inSPForFunnel : REAL := 0.25;\n\tinPositionONS : FB_ONS;\nEND_VAR\nVAR CONSTANT\n\tFEED_TO_SEAL_INSET : REAL := 1;\nEND_VAR\n","LineInfoPersistence":"(string)291ffa35-fd3f-407e-aba0-2ae6d7377e4a_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)5932","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}