{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)9935aa68-2494-4f46-915b-99e8f6816490","ParentGuid":"(Guid)00000000-0000-0000-0000-000000000000","Name":"(string)FB_AuxIO_RemoteComms","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)829a18f2-c514-4f6e-9634-1df173429203","@Value":{"@Type":"829a18f2","@Value":{"ParentObjects":{"@Type":"fa2ee218:IDictionary","@Value":[{"@Key":"(Guid)21af5390-2942-461a-bf89-951aaf6999f1","@Value":"(Guid)e5e3ea42-f702-4346-958f-7e6b4968ae62"}]}}}}]},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","829a18f2":"{829a18f2-c514-4f6e-9634-1df173429203}","fa2ee218":"{fa2ee218-a39b-4b6d-b249-49dbddbd168a}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)\n_OutputPulse_CycleComplete(Q => RemoteComms.OPCOutputsFromBagger.cycleComplete);\n_OutputPulse_CycleComplete(Q => RemoteComms.modbusOutputsFromBagger.cycleComplete);\n_outputPulse_CycleComplete.DwellSetting := 500;\n_OutputPulse_BagMade(Q => RemoteComms.OPCOutputsFromBagger.bagMade);\n_OutputPulse_BagMade(Q => RemoteComms.modbusOutputsFromBagger.bagMade);\n_OutputPulse_BagMade.DwellSetting := 500;\n\n\nIF NOT HMIData.auxIOSource.OPC_UA THEN\n    // Turn OPC outputs off\n    RemoteComms.OPCOutputsFromBagger.bagsLow := FALSE;\n    RemoteComms.OPCOutputsFromBagger.printerDataReady := FALSE;\n    RemoteComms.OPCOutputsFromBagger.runExternalExitConveyor := FALSE;\n    RemoteComms.OPCOutputsFromBagger.heartbeatResponse := FALSE;\n    RemoteComms.OPCOutputsFromBagger.baggerOK := FALSE;\n    RemoteComms.OPCInputsToBagger.bagGrabbed := FALSE;\n    RemoteComms.OPCOutputsFromBagger.bagMade := FALSE;\n    RemoteComms.OPCOutputsFromBagger.bagMadePlusLabelRequired := FALSE;\n    RemoteComms.OPCOutputsFromBagger.cycleComplete := FALSE;\n    RemoteComms.OPCInputsToBagger.fillerOK := FALSE;\n    RemoteComms.OPCInputsToBagger.baggerInhibit := FALSE;\n    RemoteComms.OPCOutputsFromBagger.readyForFiller := FALSE;\n    RemoteComms.OPCInputsToBagger.reverseConveyor := FALSE;\n    RemoteComms.OPCOutputsFromBagger.waitingForPrinter := FALSE;\nEND_IF\n\n\nIF NOT HMIData.auxIOSource.ModbusTCP THEN\n\t// Turn modbus outputs off\n\tRemoteComms.modbusOutputsFromBagger.bagsLow := FALSE;\n    RemoteComms.modbusOutputsFromBagger.printerDataReady := FALSE;\n    RemoteComms.modbusOutputsFromBagger.runExternalExitConveyor := FALSE;\n    RemoteComms.modbusOutputsFromBagger.heartbeatResponse := FALSE;\n    //RemoteComms.modbusOutputsFromBagger.baggerOK := FALSE;\n    RemoteComms.modbusInputsToBagger.bagGrabbed := FALSE;\n    RemoteComms.modbusOutputsFromBagger.bagMade := FALSE;\n    RemoteComms.modbusOutputsFromBagger.bagMadePlusLabelRequired := FALSE;\n    RemoteComms.modbusOutputsFromBagger.cycleComplete := FALSE;\n    RemoteComms.modbusInputsToBagger.baggerInhibit := FALSE;\n    RemoteComms.modbusOutputsFromBagger.readyForFiller := FALSE;\n    RemoteComms.modbusInputsToBagger.reverseConveyor := FALSE;\n    RemoteComms.modbusOutputsFromBagger.waitingForPrinter := FALSE;\n    //\t\nEND_IF\t\n\n\n\nIF HMIData.auxIOSource.OPC_UA THEN\n    (* Inputs *)\t\n    // Baggers not faults and heated up.\n    RemoteComms.OPCOutputsFromBagger.baggerOK := NOT faultActive;\t\n\n    // Filler is ready\n    fillerOK := RemoteComms.OPCInputsToBagger.fillerOK;\n\n    // Active if either input is set to 'BaggerInhibit' and the corresponding input is active, or PAA enabled and inhibiting cycle.\n    inhibitBagger := RemoteComms.OPCInputsToBagger.baggerInhibit OR inhibitCycle;\n\n    // Custom PRJ-22085: Robot successfully grabbed bag.\n    bagGrabbed := RemoteComms.OPCInputsToBagger.bagGrabbed;\n\n    // Custom PRJ-59126: Reverse BEC when high\n    reverseConveyor := RemoteComms.OPCInputsToBagger.reverseConveyor;\n\n    // Custom PRJ-MFT01: Enable Bagger (not used?\n    //enableBagger := RemoteComms.enableBagger;\n\n    (* Outputs *)\n    // Cycle Complete\n    IF state.head = HEAD_STATES.OpenedBag THEN\n        _OutputPulse_CycleComplete.Trigger();\n    END_IF\n\n    // Bag Made\n    IF state.head = HEAD_STATES.SealedAndSeparatedBag THEN\n        _OutputPulse_BagMade.Trigger();\n    END_IF\n\n    RemoteComms.OPCOutputsFromBagger.readyForFiller := waitingForFiller;\n    RemoteComms.OPCOutputsFromBagger.bagsLow := bagsLow;\n    RemoteComms.OPCOutputsFromBagger.printerDataReady := printerDataReady;\n    RemoteComms.OPCOutputsFromBagger.waitingForPrinter := state.sb.releaseFeed = RELEASE_FEED_STATES.WaitForPrinter;\n    RemoteComms.OPCOutputsFromBagger.runExternalExitConveyor := runExitConveyor;\n\n    // Bag Made Plus Label Required\n    IF NOT printerDataReady AND state.head = HEAD_STATES.SealedAndSeparatedBag THEN\n        RemoteComms.OPCOutputsFromBagger.bagMadePlusLabelRequired := TRUE;\n    END_IF\n\n    IF printerDataReady OR faultActive OR (state.sb.releaseFeed = RELEASE_FEED_STATES.FeedToOffset) THEN\n        RemoteComms.OPCOutputsFromBagger.bagMadePlusLabelRequired := FALSE;\n    END_IF\n\n    // Heartbeat.\n    // External device sets heartbeat bit and resets when it sees the same change from heartbeatResponse. \n    // If heartbeat stays on or off for too long set warning.\n    _heartbeatWarningTimerOn(IN := RemoteComms.OPCInputsToBagger.heartbeat AND HMIData.remoteCommsHeartbeatEnable);\n    _heartbeatWarningTimerOff(IN := NOT RemoteComms.OPCInputsToBagger.heartbeat AND HMIData.remoteCommsHeartbeatEnable);\n    HMIData.remoteCommsHeartbeatLost.active := _heartbeatWarningTimerOn.Q OR _heartbeatWarningTimerOff.Q;\n    RemoteComms.OPCOutputsFromBagger.heartbeatResponse := RemoteComms.OPCInputsToBagger.heartbeat;\n\n    //Fault Passing\n    RemoteComms.OPCOutputsFromBagger.activeFaultsList := activeFaults;\n\t\nEND_IF\n\n\n\nIF HMIData.auxIOSource.ModbusTCP THEN\n    (* Inputs *)\t\n    // Baggers not faults and heated up.\n   RemoteComms.modbusOutputsFromBagger.baggerOK := NOT faultActive;\t\n\n    // Filler is ready\n    fillerOK := RemoteComms.modbusInputsToBagger.fillerOK;\n\n    // Active if either input is set to 'BaggerInhibit' and the corresponding input is active, or PAA enabled and inhibiting cycle.\n    inhibitBagger := RemoteComms.modbusInputsToBagger.baggerInhibit OR inhibitCycle;\n\n    // Custom PRJ-22085: Robot successfully grabbed bag.\n    bagGrabbed := RemoteComms.modbusInputsToBagger.bagGrabbed;\n\n    // Custom PRJ-59126: Reverse BEC when high\n    reverseConveyor := RemoteComms.modbusInputsToBagger.reverseConveyor;\n\n    // Custom PRJ-MFT01: Enable Bagger (not used?\n    //enableBagger := RemoteComms.enableBagger;\n\n    (* Outputs *)\n    // Cycle Complete\n    IF state.head = HEAD_STATES.OpenedBag THEN\n        _OutputPulse_CycleComplete.Trigger();\n    END_IF\n\n    // Bag Made\n    IF state.head = HEAD_STATES.SealedAndSeparatedBag THEN\n        _OutputPulse_BagMade.Trigger();\n    END_IF\n\n    RemoteComms.modbusOutputsFromBagger.readyForFiller := waitingForFiller;\n    RemoteComms.modbusOutputsFromBagger.bagsLow := bagsLow;\n    RemoteComms.modbusOutputsFromBagger.printerDataReady := printerDataReady;\n    RemoteComms.modbusOutputsFromBagger.waitingForPrinter := state.sb.releaseFeed = RELEASE_FEED_STATES.WaitForPrinter;\n    RemoteComms.modbusOutputsFromBagger.runExternalExitConveyor := runExitConveyor;\n\n    // Bag Made Plus Label Required\n    IF NOT printerDataReady AND state.head = HEAD_STATES.SealedAndSeparatedBag THEN\n        RemoteComms.modbusOutputsFromBagger.bagMadePlusLabelRequired := TRUE;\n    END_IF\n\n    IF printerDataReady OR faultActive OR (state.sb.releaseFeed = RELEASE_FEED_STATES.FeedToOffset) THEN\n        RemoteComms.modbusOutputsFromBagger.bagMadePlusLabelRequired := FALSE;\n    END_IF\n\n    // Heartbeat.\n    // External device sets heartbeat bit and resets when it sees the same change from heartbeatResponse. \n    // If heartbeat stays on or off for too long set warning.\n    _heartbeatWarningTimerOn(IN := RemoteComms.modbusInputsToBagger.heartbeat AND HMIData.remoteCommsHeartbeatEnable);\n    _heartbeatWarningTimerOff(IN := NOT RemoteComms.modbusInputsToBagger.heartbeat AND HMIData.remoteCommsHeartbeatEnable);\n    HMIData.remoteCommsHeartbeatLost.active := _heartbeatWarningTimerOn.Q OR _heartbeatWarningTimerOff.Q;\n    RemoteComms.modbusOutputsFromBagger.heartbeatResponse := RemoteComms.modbusInputsToBagger.heartbeat;\n\n      \n\t\nEND_IF","LineInfoPersistence":"(string)9935aa68-2494-4f46-915b-99e8f6816490_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)FUNCTION_BLOCK FINAL FB_AuxIO_RemoteComms\nVAR_INPUT\n\tbagsLow : BOOL;\n\tfaultActive : BOOL;\n\tinhibitCycle : BOOL;\n\tprinterDataReady : BOOL;\n\twaitingForFiller : BOOL;\n\trunExitConveyor : BOOL;\n\tstate : StateMachine;\n\tactiveFaults   : ARRAY[0..GlobalObjects.MAX_FAULTS] OF STRING;\nEND_VAR\nVAR_OUTPUT\n\tbaggerOK : BOOL;\n\tfillerOK : BOOL;\n\tbagGrabbed : BOOL;\n\tenableBagger : BOOL;\n\tinhibitBagger : BOOL;\n\treverseConveyor : BOOL;\nEND_VAR\nVAR\n\t_configOutputManager : FB_OutputPulseManager;\n\t_readyForGrab : BOOL;\n\t_readyForGrabONS : Standard.R_TRIG();\n\t_outputPulse_CycleComplete : FB_MonostableMultivibrator();\n\t_OutputPulse_BagMade : FB_MonostableMultivibrator();\n\t_heartbeatWarningTimerOn : TON := (PT := T#1000MS);\n\t_heartbeatWarningTimerOff : TON := (PT := T#1000MS);\nEND_VAR\n\n","LineInfoPersistence":"(string)9935aa68-2494-4f46-915b-99e8f6816490_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)1534","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}