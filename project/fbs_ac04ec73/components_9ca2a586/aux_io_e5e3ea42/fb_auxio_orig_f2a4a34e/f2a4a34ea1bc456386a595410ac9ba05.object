{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)f2a4a34e-a1bc-4563-86a5-95410ac9ba05","ParentGuid":"(Guid)00000000-0000-0000-0000-000000000000","Name":"(string)FB_AuxIO_ORIG","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)829a18f2-c514-4f6e-9634-1df173429203","@Value":{"@Type":"829a18f2","@Value":{"ParentObjects":{"@Type":"fa2ee218:IDictionary","@Value":[{"@Key":"(Guid)21af5390-2942-461a-bf89-951aaf6999f1","@Value":"(Guid)e5e3ea42-f702-4346-958f-7e6b4968ae62"}]}}}}]},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","829a18f2":"{829a18f2-c514-4f6e-9634-1df173429203}","fa2ee218":"{fa2ee218-a39b-4b6d-b249-49dbddbd168a}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)\n//\n_configOutputManager();\n\n//\nCASE factorySelection.factorySelection OF\n\tAuxiliaryIOSelection.NotInstalled:\n\t\t\n\t\t//\n\t\tinstalled := FALSE;\t\t\t\t\n\t\n\t\t\n\t\n\t\t// Turn Filler off if Aux IO is off\n\t\tIF __ISVALIDREF(fillerType) THEN\n\t\t\tfillerType := FillerSelection.NotInstalled;\n\t\tEND_IF\n\t\t \n\tAuxiliaryIOSelection.AuxIOStandard:\t\n\t\tinstalled := TRUE;\t\t\t\n\n\t\t// only use Physical aux IO if selected - otherwise turn it all off\t\n\t\tCASE HMIData.AuxIOType OF\n\t\t\tAuxIOType.None, AuxIOType.Modbus, AuxIOType.OPC_UA: \n\t\t\t\t// Turn outputs off\n\t\t\t\tbaggerOK := FALSE;\n\t\t\t\tfillerOK := FALSE;\n\t\t\t\tbagGrabbed := FALSE;\n\t\t\t\tconfigOut1 := FALSE;\n\t\t\t\tconfigOut2 := FALSE;\n\t\t\t\tinhibitBagger := FALSE;\n\t\t\t\treadyForFiller := FALSE;\t\n\t\t\t\t\n\t\t\t\t// Reset pulse manager\n\t\t\t\t_configOutputManager.Reset();\t\n\t\t\t\t\n\t\t\tAuxIOType.Physical:\n\t\t\t\t//\n\t\t\t\t\n\t\t\n\t\t\t\t(* Inputs *)\t\n\t\t\t\n\t\t\t\t// Baggers not faults and heated up.\n\t\t\t\tbaggerOK := NOT faultActive;\n\t\t\t\t\n\t\t\t\t// Bags open and ready for filler.\n\t\t\t\treadyForFiller := waitingForFiller;\n\t\t\t\t\t \n\t\t\t\t// Active if either input is set to 'FillerOK' and the corresponding input is active.\n\t\t\t\tfillerOK := InputActive(AuxInputSelection.FillerOK);\n\t\t\t\t\n\t\t\t\t// Active if either input is set to 'BaggerInhibit' and the corresponding input is active, or PAA enabled and inhibiting cycle.\n\t\t\t\tinhibitBagger := InputActive(AuxInputSelection.BaggerInhibit) OR inhibitCycle;\n\t\t\t\t\n\t\t\t\t// Custom PRJ-22085: Robot successfully grabbed bag.\n\t\t\t\tbagGrabbed := InputActive(AuxInputSelection.BagGrabbed);\n\t\t\t\t\n\t\t\t\t// Custom PRJ-59126: Reverse BEC when high\n\t\t\t\treverseConveyor := InputActive(AuxInputSelection.ReverseConveyor);\n\t\t\t\t\n\t\t\t\t// Custom PRJ-MFT01: Enable Bagger\n\t\t\t\tenableBagger := InputActive(AuxInputSelection.EnableBagger);\n\t\t\t\t\n\t\t\t\t(* Outputs *)\n\t\t\n\t\t\t\t// Custom PRJ22085: Ready For Grab\n\t\t\t\t_readyForGrabONS(CLK := waitingForFiller);\n\t\t\t\tIF _readyForGrabONS.Q THEN\n\t\t\t\t\tSetReadyForGrab();\n\t\t\t\tEND_IF\n\t\t\t\tIF _readyForGrab THEN\n\t\t\t\t\t_configOutputManager.ManualOn(OutputSelected(AuxOutputSelection.ReadyForGrab)); \n\t\t\t\tELSE\n\t\t\t\t\t_configOutputManager.ManualOff(OutputSelected(AuxOutputSelection.ReadyForGrab)); \n\t\t\t\tEND_IF\n\t\t\t\t\n\t\t\t\t// Bags Low\n\t\t\t\tIF bagsLow THEN\n\t\t\t\t\t_configOutputManager.ManualOn(OutputSelected(AuxOutputSelection.BagsLow)); \n\t\t\t\tELSE\n\t\t\t\t\t_configOutputManager.ManualOff(OutputSelected(AuxOutputSelection.BagsLow)); \n\t\t\t\tEND_IF\t\n\t\t\t\t\n\t\t\t\t// Cycle Complete\n\t\t\t\tIF state.head = HEAD_STATES.OpenedBag THEN\n\t\t\t\t\t_configOutputManager.Trigger(OutputSelected(AuxOutputSelection.CycleComplete));\n\t\t\t\tEND_IF\n\t\t\t\t\n\t\t\t\t// Bag Made\n\t\t\t\tIF state.head = HEAD_STATES.SealedAndSeparatedBag THEN\n\t\t\t\t\t_configOutputManager.Trigger(OutputSelected(AuxOutputSelection.BagMade));\n\t\t\t\tEND_IF\t\t\n\t\t\t\n\t\t\t\t// Printer Data Ready\n\t\t\t\tIF printerDataReady THEN\n\t\t\t\t\t_configOutputManager.ManualOn(OutputSelected(AuxOutputSelection.PrinterDataReady)); \n\t\t\t\tELSE\n\t\t\t\t\t_configOutputManager.ManualOff(OutputSelected(AuxOutputSelection.PrinterDataReady)); \n\t\t\t\tEND_IF\n\t\t\t\t\n\t\t\t\t// Waiting For Printer\n\t\t\t\tIF state.sb.releaseFeed = RELEASE_FEED_STATES.WaitForPrinter THEN\n\t\t\t\t\t_configOutputManager.ManualOn(OutputSelected(AuxOutputSelection.WaitingForPrinter)); \n\t\t\t\tELSE\n\t\t\t\t\t_configOutputManager.ManualOff(OutputSelected(AuxOutputSelection.WaitingForPrinter)); \n\t\t\t\tEND_IF\n\t\t\t\t\n\t\t\t\t// Bag Made Plus Label Required\n\t\t\t\tIF NOT printerDataReady AND state.head = HEAD_STATES.SealedAndSeparatedBag THEN\n\t\t\t\t\t_configOutputManager.ManualOn(OutputSelected(AuxOutputSelection.BagMadePlusLabelRequired)); \n\t\t\t\tEND_IF\n\t\t\t\t\t\t\n\t\t\t\tIF printerDataReady OR faultActive OR (state.sb.releaseFeed = RELEASE_FEED_STATES.FeedToOffset) THEN\n\t\t\t\t\t_configOutputManager.ManualOff(OutputSelected(AuxOutputSelection.BagMadePlusLabelRequired));\n\t\t\t\tEND_IF\t\t\n\t\t\t\t\n\t\t\t\t// Exit Conveyor\n\t\t\t\tIF runExitConveyor THEN\n\t\t\t\t\t_configOutputManager.ManualOn(OutputSelected(AuxOutputSelection.RunExternalExitConveyor)); \n\t\t\t\tELSE\n\t\t\t\t\t_configOutputManager.ManualOff(OutputSelected(AuxOutputSelection.RunExternalExitConveyor)); \n\t\t\t\tEND_IF\n\t\t\t\t\n\t\t\t\tconfigOut1 := _configOutputManager.configOut1;\n\t\t\t\tconfigOut2 := _configOutputManager.configOut2;\t\t\t\t\t\t\t \n\t\tEND_CASE\t\nEND_CASE ","LineInfoPersistence":"(string)f2a4a34e-a1bc-4563-86a5-95410ac9ba05_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)FUNCTION_BLOCK FINAL FB_AuxIO_ORIG\nVAR_INPUT\n\tbagsLow : BOOL;\n\tconfigIn1 : BOOL;\n\tconfigIn2 : BOOL;\n\tconfigIn3 : BOOL;\n\tconfigIn4 : BOOL;\n\tfaultActive : BOOL;\n\tinhibitCycle : BOOL;\n\tprinterDataReady : BOOL;\n\twaitingForFiller : BOOL;\n\trunExitConveyor : BOOL;\n\tstate : StateMachine;\n\tfactorySelection : AuxIOConfiguration;\n\tfillerType : REFERENCE TO FillerSelection;\nEND_VAR\nVAR_OUTPUT\n\tinstalled : BOOL;\n\tbaggerOK : BOOL;\n\tfillerOK : BOOL;\n\tconfigOut1 : BOOL;\n\tconfigOut2 : BOOL;\n\tbagGrabbed : BOOL;\n\tenableBagger : BOOL;\n\tinhibitBagger : BOOL;\n\treverseConveyor : BOOL;\n\treadyForFiller : BOOL;\nEND_VAR\nVAR\n\t_configOutputManager : FB_OutputPulseManager;\n\t_readyForGrab : BOOL;\n\t_readyForGrabONS : Standard.R_TRIG();\nEND_VAR\n\n","LineInfoPersistence":"(string)f2a4a34e-a1bc-4563-86a5-95410ac9ba05_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)763","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}