{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)1126e8e7-d8b7-4325-bbcd-25188d2cd2fc","ParentGuid":"(Guid)00000000-0000-0000-0000-000000000000","Name":"(string)FB_AuxIOPhysical","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)829a18f2-c514-4f6e-9634-1df173429203","@Value":{"@Type":"829a18f2","@Value":{"ParentObjects":{"@Type":"fa2ee218:IDictionary","@Value":[{"@Key":"(Guid)21af5390-2942-461a-bf89-951aaf6999f1","@Value":"(Guid)e5e3ea42-f702-4346-958f-7e6b4968ae62"}]}}}}]},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","829a18f2":"{829a18f2-c514-4f6e-9634-1df173429203}","fa2ee218":"{fa2ee218-a39b-4b6d-b249-49dbddbd168a}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)\n//\n_configOutputManager();\n\n//\nCASE factorySelection.factorySelection OF\n    AuxiliaryIOSelection.NotInstalled:\n    //\n\n    AuxiliaryIOSelection.AuxIOStandard:\n\n        (* Outputs of AuxIO Block *)\n\n        // Baggers not faults and heated up.\n        baggerOK := NOT faultActive;\n\n        // Bags open and ready for filler.\n        readyForFiller := waitingForFiller;\n\n        // Active if either input is set to 'FillerOK' and the corresponding input is active.\n        fillerOK := InputActive(AuxInputSelection.FillerOK);\n\n        // Active if either input is set to 'BaggerInhibit' and the corresponding input is active, or PAA enabled and inhibiting cycle.\n        inhibitBagger := InputActive(AuxInputSelection.BaggerInhibit) OR inhibitCycle;\n\n        // Custom PRJ-22085: Robot successfully grabbed bag.\n        bagGrabbed := InputActive(AuxInputSelection.BagGrabbed);\n\n        // Custom PRJ-59126: Reverse BEC when high\n        reverseConveyor := InputActive(AuxInputSelection.ReverseConveyor);\n\n\n        (* Configurable Outputs *)\n\n        // Custom PRJ22085: Ready For Grab\n        _readyForGrabONS(CLK := waitingForFiller);\n\n        IF _readyForGrabONS.Q THEN\n            SetReadyForGrab();\n        END_IF\n\n        IF _readyForGrab THEN\n            _configOutputManager.ManualOn(OutputSelected(AuxOutputSelection.ReadyForGrab));\n        ELSE\n            _configOutputManager.ManualOff(OutputSelected(AuxOutputSelection.ReadyForGrab));\n        END_IF\n\n        // Bags Low\n        IF bagsLow THEN\n            _configOutputManager.ManualOn(OutputSelected(AuxOutputSelection.BagsLow));\n        ELSE\n            _configOutputManager.ManualOff(OutputSelected(AuxOutputSelection.BagsLow));\n        END_IF\n\n        // Cycle Complete\n        IF state.head = HEAD_STATES.OpenedBag THEN\n            _configOutputManager.Trigger(OutputSelected(AuxOutputSelection.CycleComplete));\n        END_IF\n\n        // Bag Made\n        IF state.head = HEAD_STATES.SealedAndSeparatedBag THEN\n            _configOutputManager.Trigger(OutputSelected(AuxOutputSelection.BagMade));\n        END_IF\n\n        // Printer Data Ready\n        IF printerDataReady THEN\n            _configOutputManager.ManualOn(OutputSelected(AuxOutputSelection.PrinterDataReady));\n        ELSE\n            _configOutputManager.ManualOff(OutputSelected(AuxOutputSelection.PrinterDataReady));\n        END_IF\n\n        // Waiting For Printer\n        IF state.sb.releaseFeed = RELEASE_FEED_STATES.WaitForPrinter THEN\n            _configOutputManager.ManualOn(OutputSelected(AuxOutputSelection.WaitingForPrinter));\n        ELSE\n            _configOutputManager.ManualOff(OutputSelected(AuxOutputSelection.WaitingForPrinter));\n        END_IF\n\n        // Bag Made Plus Label Required\n        IF NOT printerDataReady AND state.head = HEAD_STATES.SealedAndSeparatedBag THEN\n            _configOutputManager.ManualOn(OutputSelected(AuxOutputSelection.BagMadePlusLabelRequired));\n        END_IF\n\n        IF printerDataReady OR faultActive OR (state.sb.releaseFeed = RELEASE_FEED_STATES.FeedToOffset) THEN\n            _configOutputManager.ManualOff(OutputSelected(AuxOutputSelection.BagMadePlusLabelRequired));\n        END_IF\n\n        // Exit Conveyor\n        IF runExitConveyor THEN\n            _configOutputManager.ManualOn(OutputSelected(AuxOutputSelection.RunExternalExitConveyor));\n        ELSE\n            _configOutputManager.ManualOff(OutputSelected(AuxOutputSelection.RunExternalExitConveyor));\n        END_IF\n\n        configOut1 := _configOutputManager.configOut1;\n        configOut2 := _configOutputManager.configOut2;\nEND_CASE","LineInfoPersistence":"(string)1126e8e7-d8b7-4325-bbcd-25188d2cd2fc_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)FUNCTION_BLOCK FINAL FB_AuxIOPhysical\nVAR_INPUT\n\tbagsLow : BOOL;\n\tconfigIn1 : BOOL;\n\tconfigIn2 : BOOL;\n\tconfigIn3 : BOOL;\n\tconfigIn4 : BOOL;\n\tfaultActive : BOOL;\n\tinhibitCycle : BOOL;\n\tprinterDataReady : BOOL;\n\twaitingForFiller : BOOL;\n\trunExitConveyor : BOOL;\n\tstate : StateMachine;\n\tfactorySelection : AuxIOConfiguration;\n\tfillerType : REFERENCE TO FillerSelection;\nEND_VAR\nVAR_OUTPUT\n\tbaggerOK : BOOL;\n\tfillerOK : BOOL;\n\tconfigOut1 : BOOL;\n\tconfigOut2 : BOOL;\n\tbagGrabbed : BOOL;\n\tinhibitBagger : BOOL;\n\treverseConveyor : BOOL;\n\treadyForFiller : BOOL;\nEND_VAR\nVAR\n\t_configOutputManager : FB_OutputPulseManager;\n\t_outputPulse_CycleComplete : FB_MonostableMultivibrator();\n\t_OutputPulse_BagMade : FB_MonostableMultivibrator();\n\t_heartbeatWarningTimerOn : TON := (PT := T#1000MS);\n\t_heartbeatWarningTimerOff : TON := (PT := T#1000MS);\n\t_readyForGrab : BOOL;\n\t_readyForGrabONS : Standard.R_TRIG();\nEND_VAR\n\n","LineInfoPersistence":"(string)1126e8e7-d8b7-4325-bbcd-25188d2cd2fc_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)879","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}