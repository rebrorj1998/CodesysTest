{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)152c0297-3c4c-493d-b743-db5edd469bd9","ParentGuid":"(Guid)9f28e3ef-4d5a-4586-8e26-e350e6e1ca90","Name":"(string)Execute","Properties":{"@Type":"2c41fa04:IDictionary","@Value":{}},"TypeGuid":"(Guid)f8a58466-d7f6-439f-bbb8-d4600e41d099","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"f8a58466","@Value":{"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)//    Function Block: AppliedMotionStepServo\n//    Description: This block provides an abstraction for a Ethernet I/P Applied Motion Step Servo\n//    Created by: Ben Hess\n//    Created Date: May 11th, 2018\n\n// Use pointers for EIP memory register locations\ndriveInputs := ptrEIPInputs^;\n\nptrEIPOutputs^ := driveOutputs;\nalarms(alarmCode := stepServoAlarmCodeRaw, faults := faults);\n\nIF currentLimit = 0 THEN \n\tcurrentLimit := defaultCurrentSetpoint;\nEND_IF\n//Map raw EIP Registers to parameters\nabsolutePositionSteps := driveInputs[6];\nvelocity := DINT_TO_INT(driveInputs[8]);\nstepServoStatusRaw := DINT_TO_INT(driveInputs[0]);\n\ndriveOutputs[4] := velocitySetpoint;\ndriveOutputs[5] := pointToPointAccelSetpoint;\ndriveOutputs[6] := pointToPointDecelSetpoint;\ndriveOutputs[7] := distanceToMoveInSteps;\ndriveOutputs[8] := currentLimit;\ndriveOutputs[9] := sclCommand;\ndriveOutputs[10] := parameter1;\ndriveOutputs[11] := parameter2;\ndriveOutputs[12] := currentLimit;\ndriveOutputs[13] := currentLimit + 1;\ndriveOutputs[0] := commands.commandWord;\n// Step servo command bits handler\ncommands();\n//Convert Distance setpoint to steps.  Reverse polarity for display purposes if needed. \n\nabsolutePositonInches := (DINT_TO_REAL(absolutePositionSteps) / INT_TO_REAL(stepsPerInchSetpoint));\n\n//Homing required from motor - for now just if there was an initialization seen.\nhomeRequiredIndication S= status.initializing OR Globals.firstScan OR _faulted OR driveInputs[11].0;\n\nhomingOSF(CLK := status.homing);\nIF NOT driveInputs[11].0 THEN\n\thomeRequiredIndication := FALSE;\nEND_IF\n\ncommandSentONS(CLK := commands.commandSent);\nIF commandSentONS.Q THEN\n\tcommandSuccessful := TRUE;\nEND_IF\n\ncommandSuccessfulONS(CLK := commandSuccessful);\nIF commandSuccessfulONS.Q THEN\n\t//parameter1 := 0;\n\t//velocitySetpoint := 0;\n\t//pointToPointAccelSetpoint := 0;\n\t//pointToPointDecelSetpoint := 0;\n\t//distanceToMoveInSteps := 0;\nEND_IF\n\n\nIF _reset AND (status.driveFaulted OR status.alarmPresent) THEN\n\tcommands.alarmReset := TRUE;\n\t_reset := FALSE;\nEND_IF\n\nIF reversePolarity THEN\n    absolutePositonInches := absolutePositonInches * -1; \nEND_IF\n\n//Get Servo Status and unpack\nstatus(statusCode := StepServoStatusRaw);\n\n//Bit-packing for LONG types over Modbus\n\n_faulted := status.driveFaulted OR status.alarmPresent OR commFail;\n\n//Manual moves for motor\nIF moveDistanceManualPB THEN\n    MoveDistance(distance := distanceSetpointInches, acceleration := pointToPointAccelSetpoint, deceleration := pointToPointDecelSetpoint, velocity := velocitySetpoint);\n    moveDistanceManualPB := FALSE;\nEND_IF\n\nIF movePositionManualPB THEN\n    MoveToPosition(position := distanceSetpointInches, acceleration := pointToPointAccelSetpoint, deceleration := pointToPointDecelSetpoint, velocity := velocitySetpoint);\n    movePositionManualPB := FALSE;\nEND_IF\n\n\nfaults.commFail.faultTrigger := commFail AND Globals.machinePowerOK;\nfaults.notHomed.faultTrigger := homeRequiredIndication AND isHomable;\n\n","LineInfoPersistence":"(string)152c0297-3c4c-493d-b743-db5edd469bd9_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)METHOD Execute\nVAR_INPUT\nEND_VAR\n","LineInfoPersistence":"(string)152c0297-3c4c-493d-b743-db5edd469bd9_Decl_LineIds"}}}}}},"TypeInfos":{"3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","f8a58466":"{f8a58466-d7f6-439f-bbb8-d4600e41d099}","string":"System.String"}}},"FormatVersion":"1.0"}