{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)4ac91988-2bd6-48ef-8373-dfd5347b7425","ParentGuid":"(Guid)00000000-0000-0000-0000-000000000000","Name":"(string)FB_StepServoCommands","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)829a18f2-c514-4f6e-9634-1df173429203","@Value":{"@Type":"829a18f2","@Value":{"ParentObjects":{"@Type":"fa2ee218:IDictionary","@Value":[{"@Key":"(Guid)21af5390-2942-461a-bf89-951aaf6999f1","@Value":"(Guid)460e3081-c292-44f2-9ac1-796ad0f3f5b2"}]}}}}]},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","829a18f2":"{829a18f2-c514-4f6e-9634-1df173429203}","fa2ee218":"{fa2ee218-a39b-4b6d-b249-49dbddbd168a}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string){analysis -166, -35, -36, -148}\n//    Fucntion Block: FB_StepServoCommands\n//    Description: This packs the step servo command bits into the register send over EIP\n//    Created by: Ben Hess\n//    Created Date: May 11th, 2018\n\n// Set the proper output bit\ncommandWord.0 := _idleState;\ncommandWord.1 := _enable;\ncommandWord.2 := _disable;\ncommandWord.3 := _feedToLength;\ncommandWord.4 := _feedToPosition;\ncommandWord.5 := _feedToSensor;\ncommandWord.6 := _feedToDoubleSensor;\ncommandWord.7 := _feedToSensorSafety;\ncommandWord.8 := _feedToSensorMask;\ncommandWord.9 := _feedAndSetOutput;\ncommandWord.10 := _feedSpeedChange;\ncommandWord.11 := _seekHome;\ncommandWord.12 := _findHome;\ncommandWord.13 := _followEncoder;\ncommandWord.14 := _stopAndKillCrash;\ncommandWord.15 := _stopAndKillNormal;\ncommandWord.16 := _startJog;\ncommandWord.17 := _updateJogSpeed;\ncommandWord.18 := _sendHostCommand;\ncommandWord.19 := _sendQAndExecute;\ncommandWord.20 := _alarmReset;\n\nIF commandWord <> 0 THEN\n\tcommandWord := commandWord;\nEND_IF\n\n// CLear the command bits after 1.3x motor RPI\nclearCommandWordTimer(IN := commandWord <> 0);\nclearCommandWordTimer2();\nIF clearCommandWordTimer.Q THEN\n\tTHIS^.Clear();\n\tclearCommandWordTimer2.IN := TRUE;\nEND_IF\n\nIF clearCommandWordTimer2.Q THEN\n\tcommandSent := TRUE;\n\tclearCommandWordTimer2.IN := FALSE;\nEND_IF\n\n","LineInfoPersistence":"(string)4ac91988-2bd6-48ef-8373-dfd5347b7425_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string){analysis -166, -35, -36, -38, -148}\nFUNCTION_BLOCK FB_StepServoCommands\nVAR_INPUT\n       \nEND_VAR\nVAR_OUTPUT\n    commandWord : DINT;\n\tcommandSent : BOOL;\nEND_VAR\nVAR\n\t_idleState : BOOL; // Idle State (Send this between repeated commands)\n    _enable : BOOL; // Enable\n    _disable : BOOL; // Disable\n    _feedToLength : BOOL; // Start Move - FL\n    _feedToPosition : BOOL; // Start Move - FP\n    _feedToSensor : BOOL; // Start Move - FS (sensor)\n    _feedToDoubleSensor : BOOL; // Start Move - FD (double sensor)\n    _feedToSensorSafety : BOOL; // Start Move - FY (sensor w/ safety distance)\n    _feedToSensorMask : BOOL; // Start Move - FM (sensor w/ mask distance)\n    _feedAndSetOutput : BOOL; // Start Move - FO (set output)\n    _feedSpeedChange : BOOL; // Start Move - FC\n    _seekHome : BOOL; // Start Move - SH\n    _findHome : BOOL; // Start Move - FH\n    _followEncoder : BOOL; // Start Move - FE\n    _stopAndKillCrash : BOOL; // Stop/Kill - AM\n    _stopAndKillNormal : BOOL; // Stop/Kill - DE\n    _startJog : BOOL; // Start Jogging\n    _updateJogSpeed : BOOL; // Update Jog Speed\n    _sendHostCommand : BOOL; // Send Host Command\n    _sendQAndExecute : BOOL; // Q Load & Execute (QX)\n    _alarmReset : BOOL; // Alarm Reset - AR \n\tclearCommandWordTimer : TON := (PT := REAL_TO_TIME(INT_TO_REAL(Globals.AMP_MOTOR_RPI) * 1.5));\n\tclearCommandWordTimer2 : TON := (PT := REAL_TO_TIME(INT_TO_REAL(Globals.AMP_MOTOR_RPI) * 1.5));\nEND_VAR\n","LineInfoPersistence":"(string)4ac91988-2bd6-48ef-8373-dfd5347b7425_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)383","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}