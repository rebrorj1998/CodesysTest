{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)9d7ec5da-9ae5-42dc-9e2b-a0934def97f5","ParentGuid":"(Guid)00000000-0000-0000-0000-000000000000","Name":"(string)FB_EZFeed","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)829a18f2-c514-4f6e-9634-1df173429203","@Value":{"@Type":"829a18f2","@Value":{"ParentObjects":{"@Type":"fa2ee218:IDictionary","@Value":[{"@Key":"(Guid)21af5390-2942-461a-bf89-951aaf6999f1","@Value":"(Guid)a3a5a7c8-5b16-4cb3-8895-b3cb804cdb40"}]}}}}]},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","829a18f2":"{829a18f2-c514-4f6e-9634-1df173429203}","fa2ee218":"{fa2ee218-a39b-4b6d-b249-49dbddbd168a}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)//    Function Block: EZFeedFB\n//    Description: EZFeed state machine\n//    Created by: Ben Hess\n//    Created Date: December 3rd, 2020\n\n\n\n\n// Resetting \n//IF resetONS.Q OR baggerFaulted OR NOT enable OR NOT enableEZFeed THEN\nIF _reset OR baggerFaulted OR NOT enable OR NOT enableEZFeed THEN\n\tstate := EZFEED_STATES.Idle;\n\trunVFD := FALSE;\n\tEZFeedDone := FALSE;\n\tflightCount := 0;\n\tpartsCount := 0;\n\temptyPartsWarningCount := 0;\nEND_IF\n\n// Timer for indexing dwell\nindexDwellTimer(PT := TO_TIME(indexDwellSetting * 1000), IN := state = EZFEED_STATES.IndexDwell);\n\nflightPresentONS(CLK := flightPresentSensor);\npartPresentONS(CLK := partPresentSensor);\n\n// Parts Counting logic\nIF partsCountingModeEnable AND (state = EZFEED_STATES.IndexingPartsMode OR state = EZFEED_STATES.IndexDwell) THEN\n\t// Count flights for empty parts watchdog timer\n\tIF flightPresentONS.OSR THEN\n\t\temptyPartsWarningCount := emptyPartsWarningCount + 1;\n\tEND_IF\n\t\n\tIF partPresentONS.OSF THEN\n\t\temptyPartsWarningCount := 0;\n\t\tpartsCount := partsCount + 1;\n\tEND_IF\n\t\nEND_IF\n\nemptyPartsWarning := state = EZFEED_STATES.PartsStarved;\n\nCASE state OF\n\t\n\tEZFEED_STATES.Idle :\t\t\t\t\t\t// When filler reports as waiting for filler, start indexing the EZFeed\n\t\t\t\t\t\t\t\t\t\t\t\tIF enableEZFeed AND waitingForFiller THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\tIF partsCountingModeEnable THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := EZFEED_STATES.IndexingPartsMode;\n\t\t\t\t\t\t\t\t\t\t\t\t\tELSE\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := EZFEED_STATES.IndexingFlightMode;\n\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\n\tEZFEED_STATES.IndexingPartsMode :\t\t\t// Check parts count and start bagger if count reached\n\t\t\t\t\t\t\t\t\t\t\t\trunVFD := TRUE;\n\t\t\t\t\t\t\t\t\t\t\t\tIF flightPresentONS.OSR THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\tIF (emptyPartsWarningCount >= emptyPartsWarningSetting) AND emptyPartsWarningSetting<> 0 THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trunVFD := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := EZFEED_STATES.PartsStarved;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\tELSIF partsCount >= partsTarget THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tpartsCount := 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trunVFD := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEZFeedDone := TRUE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := EZFEED_STATES.WaitForBaggerCycleComplete;\n\t\t\t\t\t\t\t\t\t\t\t\t\tELSE\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Dwell at each flight for indexing mode\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF NOT continuousModeEnable THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trunVFD := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := EZFEED_STATES.IndexDwell;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\n\tEZFEED_STATES.IndexingFlightMode :\t\t\t// Run the VFD until flight seen. Keep going until target reached in Continuous mode or stop for dwell time in indexing mode\n\t\t\t\t\t\t\t\t\t\t\t\trunVFD := TRUE;\n\t\t\t\t\t\t\t\t\t\t\t\tIF flightPresentONS.OSR THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\tflightCount := flightCount + 1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t// Check flight count and start bagger if count reached\n\t\t\t\t\t\t\t\t\t\t\t\t\tIF flightCount >= flightTarget THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\trunVFD := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEZFeedDone := TRUE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tflightCount := 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := EZFEED_STATES.WaitForBaggerCycleComplete;\n\t\t\t\t\t\t\t\t\t\t\t\t\tELSE\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t// Dwell at each flight for indexing mode\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF NOT continuousModeEnable THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trunVFD := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := EZFEED_STATES.IndexDwell;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\n\tEZFEED_STATES.IndexDwell :\t\t\t\t\t// Dwell at each flight for indexing mode\n\t\t\t\t\t\t\t\t\t\t\t\tIF indexDwellTimer.Q THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\tIF partsCountingModeEnable THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF (emptyPartsWarningCount >= emptyPartsWarningSetting) AND emptyPartsWarningSetting<> 0 THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trunVFD := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := EZFEED_STATES.PartsStarved;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tIF partsCount >= partsTarget THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpartsCount := 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trunVFD := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEZFeedDone := TRUE;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := EZFEED_STATES.WaitForBaggerCycleComplete;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tELSE\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := EZFEED_STATES.IndexingPartsMode;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\tELSE\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := EZFEED_STATES.IndexingFlightMode;\n\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\n\tEZFEED_STATES.WaitForBaggerCycleComplete :\t// Once bagger cycle is complete then resume indexing\n\t\t\t\t\t\t\t\t\t\t\t\tIF waitingForFiller THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\tEZFeedDone := FALSE;\n\t\t\t\t\t\t\t\t\t\t\t\t\tIF partsCountingModeEnable THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := EZFEED_STATES.IndexingPartsMode;\n\t\t\t\t\t\t\t\t\t\t\t\t\tELSE\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := EZFEED_STATES.IndexingFlightMode;\n\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\n\tEZFEED_STATES.PartsStarved:\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\t\t\t\tIF restartFromEmptyParts THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\temptyPartsWarningCount := 0;\n\t\t\t\t\t\t\t\t\t\t\t\t\tIF partsCountingModeEnable THEN\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := EZFEED_STATES.IndexingPartsMode;\n\t\t\t\t\t\t\t\t\t\t\t\t\tELSE\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstate := EZFEED_STATES.IndexingFlightMode;\n\t\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\n\tEZFEED_STATES.Fault :\t\t\t\t\t\t//\n\t\t\t\t\t\t\t\t\t\t\t\t\n\nEND_CASE\n\n// Run parent FB\nSUPER^();","LineInfoPersistence":"(string)9d7ec5da-9ae5-42dc-9e2b-a0934def97f5_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)FUNCTION_BLOCK FB_EZFeed EXTENDS FB_BaseComponent IMPLEMENTS IComponentStatus\nVAR_INPUT\n\tbaggerFaulted : BOOL;\n\tenableEZFeed : BOOL;\t\t\t\t\t// Enable EZFeed conveyor (In Use)\n\tcontinuousModeEnable : BOOL; \t\t\t// 0 = indexing mode, 1 = continuous mode\n\tpartsCountingModeEnable : BOOL;\t\t\t// 0 = Flight counting only, 1 = Parts counting (requires sensor or light curtains)\n\tflightPresentSensor : BOOL;\t\t\t\t// Flight present \n\tpartPresentSensor : BOOL;\t\t\t\t// Part present/dropping (photoeye, light curtain, etc)\n\twaitingForFiller : BOOL;\t\t\t\t// Waiting for Filler signal from bagger\n\tindexDwellSetting : REAL;\t\t\t\t// Indexing dwell setting\n\tflightTarget : DINT;\t\t\t\t\t// For Flight counting mode, target flights before starting cycle\n\tpartsTarget : DINT;\t\t\t\t\t\t// For Parts counting mode, target parts before starting cycle\n\temptyPartsWarningSetting : DINT;\t\t// For Parts counting mode, setting of empty flights counted before warning issued\n\trestartFromEmptyParts : BOOL;\t\t\t// Restart EZFeed after starvation/empty parts. Usually cycle start button\nEND_VAR\nVAR_OUTPUT\n\tstate : EZFEED_STATES;\t\t\t\t\t// State machine\n\trunVFD : BOOL;\t\t\t\t\t\t\t// Run VFD output\n\tflightCount : DINT;\t\t\t\t\t\t// Actual flight count\n\tpartsCount : DINT;\t\t\t\t\t\t// Actual parts count\n\temptyPartsWarningCount : DINT;\t\t\t// Actual empty flights count\n\tEZFeedDone : BOOL;\t\t\t\t\t\t// EZFeed done - cycle bagger\n\temptyPartsWarning : BOOL;\t\t\t\t// Parts starved\nEND_VAR\nVAR\n\tindexDwellTimer : TON;\n\tflightPresentONS : FB_ONS;\n\tpartPresentONS : FB_ONS;\nEND_VAR\n\t\nVAR_IN_OUT\nEND_VAR\n","LineInfoPersistence":"(string)9d7ec5da-9ae5-42dc-9e2b-a0934def97f5_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)1359","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}