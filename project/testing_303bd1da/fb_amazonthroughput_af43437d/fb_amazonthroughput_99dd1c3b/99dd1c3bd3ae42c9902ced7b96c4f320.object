{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)99dd1c3b-d3ae-42c9-902c-ed7b96c4f320","ParentGuid":"(Guid)00000000-0000-0000-0000-000000000000","Name":"(string)FB_AmazonThroughput","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)829a18f2-c514-4f6e-9634-1df173429203","@Value":{"@Type":"829a18f2","@Value":{"ParentObjects":{"@Type":"fa2ee218:IDictionary","@Value":[{"@Key":"(Guid)21af5390-2942-461a-bf89-951aaf6999f1","@Value":"(Guid)af43437d-916b-426e-b030-8096ff8e6bb3"}]}}}}]},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","829a18f2":"{829a18f2-c514-4f6e-9634-1df173429203}","fa2ee218":"{fa2ee218-a39b-4b6d-b249-49dbddbd168a}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)// Runtime calculation. The goal is to capture actual runtime of the machine (i.e being used, including loading time)\ninCycleONS(CLK := inCycle);\n// Reset timeout time \nIF inCycleONS.OSR THEN\n\tresetRuntime := TRUE;\n\tcycleStarted := TRUE;\n\tBPMCycles := BPMCycles + 1;\nEND_IF;\n\n// After timeout, assume machine in unmanned\nruntimeTimeoutTimer(IN := NOT resetRuntime, PT := TO_TIME(runtimeTimeout * 1000.0));\nresetRuntime := FALSE;\ntimeoutONS(CLK := runtimeTimeoutTimer.Q);\n\n// 1 second ticker while being used.\nactualRuntimeTimer(IN := cycleStarted AND NOT actualRuntimeTimer.Q AND NOT runtimeTimeoutTimer.Q, PT := T#1s);\n\nIF actualRuntimeTimer.Q THEN\n\tBPMSeconds := BPMSeconds + 1;\nEND_IF;\n\n// Subtract 5 seconds after machine is abandoned\nruntimeSubtractedToGetFiveSeconds := ANY_TO_UDINT(ABS(5.0 - runtimeTimeout));\n\nIF timeoutONS.OSR THEN\n\tIF BPMSeconds > runtimeSubtractedToGetFiveSeconds THEN\n\t\tBPMSeconds := BPMSeconds - runtimeSubtractedToGetFiveSeconds;\n\tEND_IF;\n\tcycleStarted := FALSE;\nEND_IF;\n\n// Pressing reset for 5 seconds to reset throughput numbers\nresetRuntimeTimer(IN := reset);\nIF resetRuntimeTimer.q THEN\n\tBPMSeconds := 0;\n\tBPMCycles := 0;\n\tresetRuntime := FALSE;\nEND_IF;\n\n\n// Concat to string for display\nruntimeHours := BPMSeconds / 3600;\nruntimeMinutes := (BPMSeconds MOD 3600) / 60;\nruntimeSeconds := BPMSeconds MOD 60;\n\nIF BPMSeconds <> 0 THEN\n\tBPM := ANY_TO_REAL(BPMCycles) / (ANY_TO_REAL(BPMSeconds) / 60.0);\nELSE\n\tBPM := 0.0;\nEND_IF;\nBPMIndication := '';\nBPMIndication := ANY_TO_STRING(runtimeHours);\nBPMIndication := INSERT(BPMIndication, 'H  ', LEN(BPMIndication) + 2);\nBPMIndication := INSERT(BPMIndication, ANY_TO_STRING(runtimeMinutes), LEN(BPMIndication));\nBPMIndication := INSERT(BPMIndication, 'M ', LEN(BPMIndication));\nBPMIndication := INSERT(BPMIndication, ANY_TO_STRING(runtimeSeconds), LEN(BPMIndication));\nBPMIndication := INSERT(BPMIndication, 'S', LEN(BPMIndication));\n","LineInfoPersistence":"(string)99dd1c3b-d3ae-42c9-902c-ed7b96c4f320_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)FUNCTION_BLOCK FB_AmazonThroughput\nVAR_INPUT\n\tinCycle : BOOL;\n\truntimeTimeout : REAL := 5.0;\n\treset : BOOL;\nEND_VAR\nVAR_OUTPUT\n\tBPM : REAL;\n\tBPMCycles : UDINT;\n\tBPMSeconds : UDINT;\n\tBPMIndication : STRING;\nEND_VAR\nVAR\n\tresetRuntime : BOOL;\n\tresetRuntimeTimer : TON := (PT := T#5S);\n\truntimeTimeoutTimer : Standard.TON;\n\truntimeTimer : Standard.TON;\n\tactualRuntimeTimer : Standard.TON;\n\ttimeoutONS : FB_ONS;\n\tinCycleONS : FB_ONS;\n\truntimeSeconds : UDINT;\n\truntimeMinutes : UDINT;\n\truntimeHours : UDINT;\n\truntimeDays : UDINT;\n\truntimeSubtractedToGetFiveSeconds : UDINT;\n\tcycleStarted : BOOL;\n\ttotalTempH : UDINT;\n\ttotalTempM : UDINT;\n\ttotalTempS : UDINT;\t\nEND_VAR\n","LineInfoPersistence":"(string)99dd1c3b-d3ae-42c9-902c-ed7b96c4f320_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)435","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}