{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)3b94fbd4-bd57-4531-8593-a42732282146","ParentGuid":"(Guid)9266ed0f-7f1e-4370-8ffa-55b419b1a46d","Name":"(string)FB_BaseAppliedMotionMotorEIP","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)829a18f2-c514-4f6e-9634-1df173429203","@Value":{"@Type":"829a18f2","@Value":{"ParentObjects":{"@Type":"fa2ee218:IDictionary","@Value":[{"@Key":"(Guid)d9b2b2cc-ea99-4c3b-aa42-1e5c49e65b84","@Value":"(Guid)d13f2886-434d-42dc-a9f4-9d2263fa506d"}]}}}}]},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","829a18f2":"{829a18f2-c514-4f6e-9634-1df173429203}","fa2ee218":"{fa2ee218-a39b-4b6d-b249-49dbddbd168a}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)//\n//  FB_BaseAppliedMotionMotorEIP\n//  Motion/Motors/AppliedMotion/Applied Motion TSM34IP-3DG/FB_BaseAppliedMotionMotorEIP\n//\n//  Created by Evan Ische on 8/13/2021.\n//  Copyright (C) 2021 Sharp Packaging Systems By Pregis. All rights reserved.\n//\n\n// Step servo command bits handler\n_commands();\n\n// If Motor Faulted, Continue to Write Reset Fault Commands \n_resetONS(CLK := AckError);\nCASE motorResetState OF\n\teMotorResetStates.Idle:\n\t\tIF _resetONS.OSR THEN\n\t\t\tmotorResetState := eMotorResetStates.Reset;\n\t\tEND_IF\n\teMotorResetStates.Reset:\n\t\t_commands.AlarmReset := TRUE;\n\t\tIF _commands.commandSuccessful THEN\n\t\t\tmotorResetState := eMotorResetStates.Enable;\n\t\tEND_IF\n\teMotorResetStates.Enable:\n\t\t_commands.Enable := TRUE;\n\t\tIF _commands.commandSuccessful THEN\n\t\t\tmotorResetState := eMotorResetStates.Idle;\n\t\tEND_IF\nEND_CASE\n\n// Reset the homing bit whenever off/e-stopped\nIF commsFailure THEN\n\tisHomed := FALSE;\nEND_IF\n\n// Initalize current limit\nIF profileCurrentLimit = 0 THEN\n\tprofileCurrentLimit := defaultCurrent;\nEND_IF\n\n// Actual current limit has reached set maximum\ncurrentLimitReached := alarmCode.13;\n\n// Write EIP Registers To Parameters\nstatusCode := DINT_TO_INT(dataFromDrive[0]);\nalarmCode  := DINT_TO_INT(dataFromDrive[1]);\nactPos     := TO_REAL(dataFromDrive[6]);\nactVel     := TO_REAL(dataFromDrive[8]);\n\n// Write Paramters to EIP Registers\ndataToDrive[04] := TO_DINT(ScaledProfileVelocity);\ndataToDrive[05] := TO_DINT(profileAcceleration);\ndataToDrive[06] := TO_DINT(profileDeceleration);\ndataToDrive[07] := TO_DINT(ScaledProfileTargetPostion);\ndataToDrive[08] := TO_DINT(profileCurrentLimit);\ndataToDrive[09] := TO_DINT(_sclCommand);\ndataToDrive[10] := TO_DINT(_parameter1);\ndataToDrive[11] := TO_DINT(_parameter2);\ndataToDrive[12] := TO_DINT(profileCurrentLimit);\ndataToDrive[13] := TO_DINT(profileCurrentLimit) + 1;\ndataToDrive[00] := _commands.commandWord;\n\n// Get drive data directly from master axis\n_status(statusCode := statusCode);\nIF NOT _status.moving THEN \n\tactVel := 0;\nEND_IF\n\n//Convert Distance setpoint to steps.  Reverse polarity for display purposes if needed. \nactualPositonInInches := (actPos / DINT_TO_REAL(stepsPerInch));\nIF reversePolarity THEN\n    actualPositonInInches := actualPositonInInches * -1; \nEND_IF\n\n// For use in any class that extends this class\n_haltONS(CLK := Halt);\n_moveRelONS(CLK := MoveRel);\n_moveAbsONS(CLK := MoveAbs);\n_homeONS(CLK := StartHoming);\n\n// On rising edge start moving, on falling edge halt \n_jogForwardONS(CLK := serviceJogForward);\n_jogReverseONS(CLK := serviceJogReverse);\nIF _jogForwardONS.OSR OR _jogReverseONS.OSR THEN\n\tCASE joggingParameters.jogType OF\n\t\teDiscreteMotionType.Relative:\n\t\t\tprofileAcceleration := joggingParameters.relative.acceleration;\n\t\t\tprofileDeceleration := joggingParameters.relative.deceleration;\n\t\t\tprofileVelocity := joggingParameters.relative.velocity;\n\t\t\ttargetPosDist := joggingParameters.relative.position;\n\t\t\tIF _jogReverseONS.OSR THEN\n\t\t\t\ttargetPosDist := targetPosDist * -1;\n\t\t\tEND_IF\n\t\teDiscreteMotionType.Absolute:\n\t\t\tprofileAcceleration := joggingParameters.absolute.acceleration;\n\t\t\tprofileDeceleration := joggingParameters.absolute.deceleration;\n\t\t\tprofileVelocity := joggingParameters.absolute.velocity;\n\t\t\ttargetPosDist := joggingParameters.absolute.maxPosition;\n\t\t\tIF _jogReverseONS.OSR THEN\n\t\t\t\ttargetPosDist := joggingParameters.absolute.minPosition;\n\t\t\tEND_IF\n\tEND_CASE\n\t_state := eAxisREFMotionState.Jog;\nELSIF _jogForwardONS.OSF OR _jogReverseONS.OSF OR _haltONS.OSR THEN\n\t_state := eAxisREFMotionState.Halt;\nEND_IF\n","LineInfoPersistence":"(string)3b94fbd4-bd57-4531-8593-a42732282146_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)FUNCTION_BLOCK FB_BaseAppliedMotionMotorEIP EXTENDS Axis_REF\nVAR_INPUT\n\tstepsPerInch : DINT;\n\trotationsPerInch : REAL;\n\treversePolarity : BOOL;\n\tserviceJogForward : BOOL;\n\tserviceJogReverse : BOOL;\n\thomingSensorClear : BOOL;\n\tcommsFailure : BOOL;\n\tjoggingParameters : Jog;\n\thomingParameters : MotionParameters;\n\tmotorResetState : eMotorResetStates;\n\tdataFromDrive : POINTER TO DINT;\n    dataToDrive : POINTER TO DINT;\nEND_VAR\nVAR_OUTPUT\n\talarmCode: INT;\n    statusCode : INT;\n\tactualPositonInInches : REAL;\nEND_VAR\nVAR\n\t_haltONS : FB_ONS;\n\t_homeONS: FB_ONS;\n\t_jogForwardONS : FB_ONS;\n\t_jogReverseONS : FB_ONS;\n\t_resetONS : FB_ONS;\n\t_moveRelONS : FB_ONS;\n\t_moveAbsONS : FB_ONS;\n\t_sclCommand : DINT;\t\t\t\t        \n\t_parameter1 : DINT;\t\t\t\t\t    \n\t_parameter2 : DINT;\t\t\t\t\t    \n\t_commands : FB_StepServoCommands;\n\t_status : FB_StepServoStatus;\n\t_state : eAxisREFMotionState;\nEND_VAR\n","LineInfoPersistence":"(string)3b94fbd4-bd57-4531-8593-a42732282146_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)5972","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}