{"payload":{"meta":{"Graph":{"@Type":"81297157","@Value":{"Guid":"(Guid)9c795017-aa26-4a26-a7cf-07331c02d53f","ParentGuid":"(Guid)9266ed0f-7f1e-4370-8ffa-55b419b1a46d","Name":"(string)FB_MasterAppliedMotionMotorEIP","Properties":{"@Type":"2c41fa04:IDictionary","@Value":[{"@Key":"(Guid)829a18f2-c514-4f6e-9634-1df173429203","@Value":{"@Type":"829a18f2","@Value":{"ParentObjects":{"@Type":"fa2ee218:IDictionary","@Value":[{"@Key":"(Guid)d9b2b2cc-ea99-4c3b-aa42-1e5c49e65b84","@Value":"(Guid)d13f2886-434d-42dc-a9f4-9d2263fa506d"}]}}}}]},"TypeGuid":"(Guid)6f9dac99-8de1-4efc-8465-68ac443b7d08","EmbeddedTypeGuids":{"@Type":"[Guid]","@Value":["(Guid)a9ed5b7e-75c5-4651-af16-d2c27e98cb94","(Guid)3b83b776-fb25-43b8-99f2-3c507c9143fc"]}}},"TypeInfos":{"2c41fa04":"{2c41fa04-1834-41c1-816e-303c7aa2c05b}","81297157":"{81297157-7ec9-45ce-845e-84cab2b88ade}","829a18f2":"{829a18f2-c514-4f6e-9634-1df173429203}","fa2ee218":"{fa2ee218-a39b-4b6d-b249-49dbddbd168a}","Guid":"System.Guid","string":"System.String"}},"object":{"Graph":{"@Type":"6f9dac99","@Value":{"SpecialFunc":{"@Type":"0db3d7bb:Enum","@Value":"None"},"Implementation":{"@Type":"3b83b776","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)//\tFunction Block: FB_MasterAppliedMotionMotorEIP()\n//\tDescription: A PLCOpen Motion compliant library for a Oriental AZ Series drive/motor\n//\tCreated by: Evan Ische\n//\tCreated Date: Tuesday, October 13th 2020\n\n// Outputs for Motion Lib\noperational := PowerOn;\nEnableState := DriveEnable;\n\n// Exit if drive isn't enabled.\nIF NOT DriveEnable THEN\n\tRETURN;\nEND_IF\n\nSUPER^();\n\n// On rising edge of the reset, nil out the state engine\nIF _resetONS.OSR THEN\n\ttargetReached := FALSE;\n\t_state := eAxisREFMotionState.Idle;\nEND_IF\n\nCASE _state OF\n\teAxisREFMotionState.Idle:// \tIdle state, wait for command\n\t\ttargetReached := FALSE;\n\t\tIF _moveRelONS.OSR THEN\n\t\t\t_state := eAxisREFMotionState.MoveRelative; // Start internal state sequence\n\t\tEND_IF\n\t\tinternalState := eRelativeMoveState.Idle;\n\t\t\n\teAxisREFMotionState.Jog,\t\n\teAxisREFMotionState.MoveRelative:\n\t\t\n\t\tCASE internalState OF\n\t\t\teRelativeMoveState.Idle:\n\t\t\t\t// Begin the move sequence\n\t\t\t\tinternalState := eRelativeMoveState.SetOutputOff;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\teRelativeMoveState.SetOutputOff:\n\t\t\t\t// Turn off torque mode on the slave motor so it followes pulses then move on to the next state\t\t\n\t\t\t\tTHIS^.SetSlaveMotorToEncoderMode(); // Torque Mode Off\n\t\t\t\tIF _commands.commandSuccessful THEN\n\t\t\t\t\tinternalState := eRelativeMoveState.MoveMotor;\n\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\teRelativeMoveState.MoveMotor:\n\t\t\t\t// Clear SCL parameters and then Feed to length using parameters passed in MC\t\t\t\t\n\t\t\t\tClearMotorCommand(); // Clear CMD and Params\n\t\t\t\t_commands.FeedToLength := TRUE;\n\t\t\t\tIF _commands.commandSuccessful THEN\n\t\t\t\t\tinternalState := eRelativeMoveState.WaitAfterMovingMotor;\n\t\t\t\tEND_IF\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\teRelativeMoveState.WaitAfterMovingMotor:\n\t\t\t\t// If the move is successful and final move is off, Update the state engine to idle state, otherwise continue\t\n\t\t\t\tIF _status.inPosition THEN\n\t\t\t\t\tIF finalMove THEN\n\t\t\t\t\t\tinternalState := eRelativeMoveState.SetOutputOn;\n\t\t\t\t\tELSE\n\t\t\t\t\t\ttargetReached := TRUE;\n\t\t\t\t\t\t_state := eAxisREFMotionState.Idle;\n\t\t\t\t\tEND_IF\n\t\t\t\tEND_IF\n\t\t\t\t\n\t\t\teRelativeMoveState.SetOutputOn:\n\t\t\t\t//Turn on torque mode on the slave motor \t \n\t\t\t\tTHIS^.SetSlaveMotorToTorqueMode(); // Torque Mode On\n\t\t\t\tIF _commands.commandSuccessful THEN\n\t\t\t\t\tinternalState := eRelativeMoveState.WaitAfterSettingOutputOn;\n\t\t\t\tEND_IF\n\t\t\t\t\n\t\t\teRelativeMoveState.WaitAfterSettingOutputOn:\n\t\t\t\t// Upon completion, Update the state engine to idle state\n\t\t\t\ttargetReached := TRUE;\n\t\t\t\t_state := eAxisREFMotionState.Idle;\n\t\tEND_CASE\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\n\teAxisREFMotionState.Halt:\n\t\t// Stop any active sequence\n\t\t_commands.StopNormal := TRUE;\n\t\tIF _commands.commandSuccessful THEN\n\t\t\t_state := eAxisREFMotionState.Idle;\n\t\tEND_IF\n\nEND_CASE","LineInfoPersistence":"(string)9c795017-aa26-4a26-a7cf-07331c02d53f_Impl_LineIds"}}}},"Interface":{"@Type":"a9ed5b7e","@Value":{"TextDocument":{"@Type":"f3878285","@Value":{"TextBlobForSerialisation":"(string)FUNCTION_BLOCK FB_MasterAppliedMotionMotorEIP EXTENDS FB_BaseAppliedMotionMotorEIP\nVAR_INPUT\nEND_VAR\nVAR\n\tinternalState: eRelativeMoveState;\nEND_VAR\n","LineInfoPersistence":"(string)9c795017-aa26-4a26-a7cf-07331c02d53f_Decl_LineIds"}}}},"UniqueIdGenerator":"(string)7368","POULevel":{"@Type":"8e575c5b:Enum","@Value":"Standard"},"ChildObjectGuids":{"@Type":"ArrayList:IList","@Value":[]},"AddAttributeSubsequent":"(bool)False"}},"TypeInfos":{"0db3d7bb":"{0db3d7bb-cde0-4416-9a7b-ce49a0124323}","3b83b776":"{3b83b776-fb25-43b8-99f2-3c507c9143fc}","6f9dac99":"{6f9dac99-8de1-4efc-8465-68ac443b7d08}","8e575c5b":"{8e575c5b-1d37-49c6-941b-5c0ec7874787}","a9ed5b7e":"{a9ed5b7e-75c5-4651-af16-d2c27e98cb94}","ArrayList":"System.Collections.ArrayList","bool":"System.Boolean","f3878285":"{f3878285-8e4f-490b-bb1b-9acbb7eb04db}","string":"System.String"}}},"FormatVersion":"1.0"}