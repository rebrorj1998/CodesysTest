//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Neo.ApplicationFramework.Generated
{
	using Neo.ApplicationFramework.Tools.Actions;
	
	
	public partial class MultipleLanguages : Neo.ApplicationFramework.Tools.MultiLanguage.MultiLanguageServer, Neo.ApplicationFramework.Interfaces.ISupportMultiLanguage
	{
		
		public MultipleLanguages()
		{
			this.InitializeComponent();
			this.ApplyLanguageInternal();
		}
		
		private void InitializeComponent()
		{
			this.InitializeBeginInits();
			this.InitializeObjects();
			this.InitializeEndInits();
			this.ConnectDataBindings();
		}
		
		protected override void Dispose(bool disposing)
		{
			base.Dispose(disposing);
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		public virtual void ConnectDataBindings()
		{
		}
		
		private void InitializeObjectCreations()
		{
		}
		
		private void InitializeBeginInits()
		{
			((System.ComponentModel.ISupportInitialize)(this)).BeginInit();
		}
		
		private void InitializeEndInits()
		{
			((System.ComponentModel.ISupportInitialize)(this)).EndInit();
		}
		
		private void InitializeObjects()
		{
			Neo.ApplicationFramework.Tools.MultiLanguage.LanguageInfo LanguageInfo1 = new Neo.ApplicationFramework.Tools.MultiLanguage.LanguageInfo();
			LanguageInfo1.FontName = null;
			LanguageInfo1.FontOffset = 0;
			LanguageInfo1.Index = 1;
			LanguageInfo1.IsPublic = true;
			LanguageInfo1.KeyboardLayoutName = "US";
			LanguageInfo1.Name = "French (France)";
			LanguageInfo1.UseInRuntime = true;
			LanguageInfo1.WordWrapAdjust = false;
			this.Languages.Add(LanguageInfo1);
			Neo.ApplicationFramework.Tools.MultiLanguage.LanguageInfo LanguageInfo2 = new Neo.ApplicationFramework.Tools.MultiLanguage.LanguageInfo();
			LanguageInfo2.FontName = null;
			LanguageInfo2.FontOffset = 0;
			LanguageInfo2.Index = 2;
			LanguageInfo2.IsPublic = true;
			LanguageInfo2.KeyboardLayoutName = "US";
			LanguageInfo2.Name = "German (Germany)";
			LanguageInfo2.UseInRuntime = true;
			LanguageInfo2.WordWrapAdjust = false;
			this.Languages.Add(LanguageInfo2);
			Neo.ApplicationFramework.Tools.MultiLanguage.LanguageInfo LanguageInfo3 = new Neo.ApplicationFramework.Tools.MultiLanguage.LanguageInfo();
			LanguageInfo3.FontName = null;
			LanguageInfo3.FontOffset = 0;
			LanguageInfo3.Index = 3;
			LanguageInfo3.IsPublic = true;
			LanguageInfo3.KeyboardLayoutName = "US";
			LanguageInfo3.Name = "Dutch (Netherlands)";
			LanguageInfo3.UseInRuntime = true;
			LanguageInfo3.WordWrapAdjust = false;
			this.Languages.Add(LanguageInfo3);
			Neo.ApplicationFramework.Tools.MultiLanguage.LanguageInfo LanguageInfo4 = new Neo.ApplicationFramework.Tools.MultiLanguage.LanguageInfo();
			LanguageInfo4.FontName = null;
			LanguageInfo4.FontOffset = 0;
			LanguageInfo4.Index = 4;
			LanguageInfo4.IsPublic = true;
			LanguageInfo4.KeyboardLayoutName = "US";
			LanguageInfo4.Name = "Spanish (Latin America)";
			LanguageInfo4.UseInRuntime = true;
			LanguageInfo4.WordWrapAdjust = false;
			this.Languages.Add(LanguageInfo4);
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		private void ApplyLanguageInternal()
		{
			Neo.ApplicationFramework.Tools.MultiLanguage.MultiLanguageResourceManager resources = new Neo.ApplicationFramework.Tools.MultiLanguage.MultiLanguageResourceManager(typeof(MultipleLanguages));
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		void Neo.ApplicationFramework.Interfaces.ISupportMultiLanguage.ApplyLanguage()
		{
			this.ApplyLanguage();
		}
		
		[System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Never)]
		protected virtual void ApplyLanguage()
		{
			this.ApplyLanguageInternal();
		}
	}
}
